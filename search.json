[{"path":"https://docs.ropensci.org/excluder/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to excluder","title":"Contributing to excluder","text":"outlines propose change excluder.","code":""},{"path":"https://docs.ropensci.org/excluder/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to excluder","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://docs.ropensci.org/excluder/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to excluder","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://docs.ropensci.org/excluder/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to excluder","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"jeffreyrstevens/excluder\", fork = TRUE). Install development dependences devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://docs.ropensci.org/excluder/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to excluder","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://docs.ropensci.org/excluder/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to excluder","text":"Please note excluder project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://docs.ropensci.org/excluder/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://docs.ropensci.org/excluder/articles/excluder.html","id":"usage","dir":"Articles","previous_headings":"","what":"Usage","title":"excluder","text":"package three core verbs: mark_*() functions add new column original data frame labels rows meeting exclusion criteria. useful label potential exclusions future processing without changing original data frame. check_*() functions search exclusion criteria output message number rows meeting criteria data frame rows meeting criteria. useful viewing potential exclusions. exclude_*() functions remove rows meeting exclusion criteria. safest checking rows ensure exclusions correct. check_*() exclude_*() functions call mark_*() function internally filter either excluded non-excluded rows. avoid combining different verbs sidestep unnecessary passes data. package provides seven types exclusions based Qualtrics metadata: duplicates works rows duplicate IP addresses /locations (latitude/longitude), using janitor::get_dupes(). duration works rows whose survey completion time short /long. ip works rows whose IP addresses found specified country (note: exclusion type requires internet connection download country’s IP ranges), using package {ipaddress}. location works rows whose latitude longitude found United States. preview works rows survey previews. progress works rows survey complete. resolution works rows whose screen resolution acceptable. verbs combine exclusion types generate functions. instance, mark_duplicates() mark duplicate rows exclude_preview() exclude preview rows. also helper functions: unite_exclusions() unites columns marked mark functions single column (use mark function creates new column). deidentify() removes standard Qualtrics columns identifiable information. remove_label_rows() removes first two rows labels convert date numeric columns metadata.","code":""},{"path":"https://docs.ropensci.org/excluder/articles/excluder.html","id":"preparing-your-data","dir":"Articles","previous_headings":"","what":"Preparing your data","title":"excluder","text":"use fetch_survey() qualtRics package import Qualtrics data, automatically remove first two label rows data set. However, directly download data Qualtrics, include two rows data set include label information. two side effects: (1) non-data rows need removed data set, (2) columns imported character data types. remove_label_rows() function remove two label rows. Also, default, coerce Qualtrics metadata columns character types correct formats (e.g., StartDate coerced date, Progress coerced numeric). download data Qualtrics, need run function data proceeding.","code":"dplyr::glimpse(qualtrics_raw) #> Rows: 102 #> Columns: 16 #> $ StartDate               <chr> \"Start Date\", \"{\\\"ImportId\\\":\\\"startDate\\\",\\\"t… #> $ EndDate                 <chr> \"End Date\", \"{\\\"ImportId\\\":\\\"endDate\\\",\\\"timeZ… #> $ Status                  <chr> \"Response Type\", \"{\\\"ImportId\\\":\\\"status\\\"}\", … #> $ IPAddress               <chr> \"IP Address\", \"{\\\"ImportId\\\":\\\"ipAddress\\\"}\", … #> $ Progress                <chr> \"Progress\", \"{\\\"ImportId\\\":\\\"progress\\\"}\", \"10… #> $ `Duration (in seconds)` <chr> \"Duration (in seconds)\", \"{\\\"ImportId\\\":\\\"dura… #> $ Finished                <chr> \"Finished\", \"{\\\"ImportId\\\":\\\"finished\\\"}\", \"TR… #> $ RecordedDate            <chr> \"Recorded Date\", \"{\\\"ImportId\\\":\\\"recordedDate… #> $ ResponseId              <chr> \"Response ID\", \"{\\\"ImportId\\\":\\\"_recordId\\\"}\",… #> $ LocationLatitude        <chr> \"Location Latitude\", \"{\\\"ImportId\\\":\\\"location… #> $ LocationLongitude       <chr> \"Location Longitude\", \"{\\\"ImportId\\\":\\\"locatio… #> $ UserLanguage            <chr> \"User Language\", \"{\\\"ImportId\\\":\\\"userLanguage… #> $ Browser                 <chr> \"Browser Meta Info - Browser\", \"{\\\"ImportId\\\":… #> $ Version                 <chr> \"Browser Meta Info - Version\", \"{\\\"ImportId\\\":… #> $ `Operating System`      <chr> \"Browser Meta Info - Operating System\", \"{\\\"Im… #> $ Resolution              <chr> \"Browser Meta Info - Resolution\", \"{\\\"ImportId… # # Remove label rows and coerce metadata columns df <- remove_label_rows(qualtrics_raw) %>%   dplyr::glimpse() #> Rows: 100 #> Columns: 16 #> $ StartDate               <dttm> 2020-12-11 12:06:52, 2020-12-11 12:06:43, 202… #> $ EndDate                 <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ Status                  <chr> \"Survey Preview\", \"Survey Preview\", \"IP Addres… #> $ IPAddress               <chr> NA, NA, \"73.23.43.0\", \"16.140.105.0\", \"107.57.… #> $ Progress                <dbl> 100, 100, 100, 100, 100, 100, 100, 100, 100, 1… #> $ `Duration (in seconds)` <dbl> 465, 545, 651, 409, 140, 213, 177, 662, 296, 2… #> $ Finished                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ RecordedDate            <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ ResponseId              <chr> \"R_xLWiuPaNuURSFXY\", \"R_Q5lqYw6emJQZx2o\", \"R_f… #> $ LocationLatitude        <dbl> 29.73694, 39.74107, 34.03852, 44.96581, 27.980… #> $ LocationLongitude       <dbl> -94.97599, -121.82490, -118.25739, -93.07187, … #> $ UserLanguage            <chr> \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\"… #> $ Browser                 <chr> \"Chrome\", \"Chrome\", \"Chrome\", \"Chrome\", \"Chrom… #> $ Version                 <chr> \"88.0.4324.41\", \"88.0.4324.50\", \"87.0.4280.88\"… #> $ `Operating System`      <chr> \"Windows NT 10.0\", \"Macintosh\", \"Windows NT 10… #> $ Resolution              <chr> \"1366x768\", \"1680x1050\", \"1366x768\", \"1536x864…"},{"path":"https://docs.ropensci.org/excluder/articles/excluder.html","id":"marking-observations","dir":"Articles","previous_headings":"","what":"Marking observations","title":"excluder","text":"core verbs package mark future processing. mark_*() suite functions creates new column mark function used marks observations violate exclusion criterion. print message number observations meeting exclusion criteria. Mark functions return data frame identical original additional columns marking exclusions. Notice new exclusion_preview column end data frame. marked first two observations preview. Piping multiple mark functions create multiple rows marking observations exclusion. unite marked columns single column, use unite_exclusions() function. create new exclusions columns unite exclusions observation single column. move combined exclusions column beginning data frame view . Multiple exclusions separated , default, separating character can controlled separator argument. default, multiple exclusion columns removed final data frame, can turned setting remove argument FALSE.","code":"# Mark observations run as preview df %>%   mark_preview() %>%   dplyr::glimpse() #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #> Rows: 100 #> Columns: 17 #> $ StartDate               <dttm> 2020-12-11 12:06:52, 2020-12-11 12:06:43, 202… #> $ EndDate                 <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ Status                  <chr> \"Survey Preview\", \"Survey Preview\", \"IP Addres… #> $ IPAddress               <chr> NA, NA, \"73.23.43.0\", \"16.140.105.0\", \"107.57.… #> $ Progress                <dbl> 100, 100, 100, 100, 100, 100, 100, 100, 100, 1… #> $ `Duration (in seconds)` <dbl> 465, 545, 651, 409, 140, 213, 177, 662, 296, 2… #> $ Finished                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ RecordedDate            <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ ResponseId              <chr> \"R_xLWiuPaNuURSFXY\", \"R_Q5lqYw6emJQZx2o\", \"R_f… #> $ LocationLatitude        <dbl> 29.73694, 39.74107, 34.03852, 44.96581, 27.980… #> $ LocationLongitude       <dbl> -94.97599, -121.82490, -118.25739, -93.07187, … #> $ UserLanguage            <chr> \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\"… #> $ Browser                 <chr> \"Chrome\", \"Chrome\", \"Chrome\", \"Chrome\", \"Chrom… #> $ Version                 <chr> \"88.0.4324.41\", \"88.0.4324.50\", \"87.0.4280.88\"… #> $ `Operating System`      <chr> \"Windows NT 10.0\", \"Macintosh\", \"Windows NT 10… #> $ Resolution              <chr> \"1366x768\", \"1680x1050\", \"1366x768\", \"1536x864… #> $ exclusion_preview       <chr> \"preview\", \"preview\", \"\", \"\", \"\", \"\", \"\", \"\", … # Mark preview and incomplete observations df %>%   mark_preview() %>%   mark_progress() %>%   dplyr::glimpse() #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #> ℹ 6 out of 100 rows did not complete the study. #> Rows: 100 #> Columns: 18 #> $ StartDate               <dttm> 2020-12-11 12:06:52, 2020-12-11 12:06:43, 202… #> $ EndDate                 <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ Status                  <chr> \"Survey Preview\", \"Survey Preview\", \"IP Addres… #> $ IPAddress               <chr> NA, NA, \"73.23.43.0\", \"16.140.105.0\", \"107.57.… #> $ Progress                <dbl> 100, 100, 100, 100, 100, 100, 100, 100, 100, 1… #> $ `Duration (in seconds)` <dbl> 465, 545, 651, 409, 140, 213, 177, 662, 296, 2… #> $ Finished                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ RecordedDate            <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ ResponseId              <chr> \"R_xLWiuPaNuURSFXY\", \"R_Q5lqYw6emJQZx2o\", \"R_f… #> $ LocationLatitude        <dbl> 29.73694, 39.74107, 34.03852, 44.96581, 27.980… #> $ LocationLongitude       <dbl> -94.97599, -121.82490, -118.25739, -93.07187, … #> $ UserLanguage            <chr> \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\"… #> $ Browser                 <chr> \"Chrome\", \"Chrome\", \"Chrome\", \"Chrome\", \"Chrom… #> $ Version                 <chr> \"88.0.4324.41\", \"88.0.4324.50\", \"87.0.4280.88\"… #> $ `Operating System`      <chr> \"Windows NT 10.0\", \"Macintosh\", \"Windows NT 10… #> $ Resolution              <chr> \"1366x768\", \"1680x1050\", \"1366x768\", \"1536x864… #> $ exclusion_preview       <chr> \"preview\", \"preview\", \"\", \"\", \"\", \"\", \"\", \"\", … #> $ exclusion_progress      <chr> \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"… df %>%   mark_preview() %>%   mark_duration(min = 500) %>%   unite_exclusions() %>%   dplyr::relocate(exclusions, .before = StartDate) #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #> ℹ 82 out of 100 rows took less time than 500. #> # A tibble: 100 × 17 #>    exclusions  StartDate           EndDate             Status IPAddress Progress #>    <chr>       <dttm>              <dttm>              <chr>  <chr>        <dbl> #>  1 \"preview,d… 2020-12-11 12:06:52 2020-12-11 12:10:30 Surve… NA             100 #>  2 \"preview\"   2020-12-11 12:06:43 2020-12-11 12:11:27 Surve… NA             100 #>  3 \"\"          2020-12-11 12:17:22 2020-12-11 12:21:41 IP Ad… 73.23.43…      100 #>  4 \"duration_… 2020-12-11 12:17:41 2020-12-11 12:22:07 IP Ad… 16.140.1…      100 #>  5 \"duration_… 2020-12-11 12:19:45 2020-12-11 12:23:16 IP Ad… 107.57.2…      100 #>  6 \"duration_… 2020-12-11 12:37:51 2020-12-11 12:43:09 IP Ad… 15.232.1…      100 #>  7 \"duration_… 2020-12-11 12:41:23 2020-12-11 12:44:37 IP Ad… 24.195.9…      100 #>  8 \"\"          2020-12-11 12:37:04 2020-12-11 12:45:50 IP Ad… 98.75.20…      100 #>  9 \"duration_… 2020-12-11 12:55:35 2020-12-11 12:59:24 IP Ad… 51.113.1…      100 #> 10 \"duration_… 2020-12-11 13:22:34 2020-12-11 13:35:19 IP Ad… 17.163.1…      100 #> # ℹ 90 more rows #> # ℹ 11 more variables: `Duration (in seconds)` <dbl>, Finished <lgl>, #> #   RecordedDate <dttm>, ResponseId <chr>, LocationLatitude <dbl>, #> #   LocationLongitude <dbl>, UserLanguage <chr>, Browser <chr>, Version <chr>, #> #   `Operating System` <chr>, Resolution <chr> df %>%   mark_preview() %>%   mark_duration(min = 500) %>%   unite_exclusions(separator = \";\", remove = FALSE) %>%   dplyr::relocate(exclusions, .before = StartDate) #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #> ℹ 82 out of 100 rows took less time than 500. #> # A tibble: 100 × 19 #>    exclusions  StartDate           EndDate             Status IPAddress Progress #>    <chr>       <dttm>              <dttm>              <chr>  <chr>        <dbl> #>  1 \"preview;d… 2020-12-11 12:06:52 2020-12-11 12:10:30 Surve… NA             100 #>  2 \"preview\"   2020-12-11 12:06:43 2020-12-11 12:11:27 Surve… NA             100 #>  3 \"\"          2020-12-11 12:17:22 2020-12-11 12:21:41 IP Ad… 73.23.43…      100 #>  4 \"duration_… 2020-12-11 12:17:41 2020-12-11 12:22:07 IP Ad… 16.140.1…      100 #>  5 \"duration_… 2020-12-11 12:19:45 2020-12-11 12:23:16 IP Ad… 107.57.2…      100 #>  6 \"duration_… 2020-12-11 12:37:51 2020-12-11 12:43:09 IP Ad… 15.232.1…      100 #>  7 \"duration_… 2020-12-11 12:41:23 2020-12-11 12:44:37 IP Ad… 24.195.9…      100 #>  8 \"\"          2020-12-11 12:37:04 2020-12-11 12:45:50 IP Ad… 98.75.20…      100 #>  9 \"duration_… 2020-12-11 12:55:35 2020-12-11 12:59:24 IP Ad… 51.113.1…      100 #> 10 \"duration_… 2020-12-11 13:22:34 2020-12-11 13:35:19 IP Ad… 17.163.1…      100 #> # ℹ 90 more rows #> # ℹ 13 more variables: `Duration (in seconds)` <dbl>, Finished <lgl>, #> #   RecordedDate <dttm>, ResponseId <chr>, LocationLatitude <dbl>, #> #   LocationLongitude <dbl>, UserLanguage <chr>, Browser <chr>, Version <chr>, #> #   `Operating System` <chr>, Resolution <chr>, exclusion_preview <chr>, #> #   exclusion_duration <chr>"},{"path":"https://docs.ropensci.org/excluder/articles/excluder.html","id":"checking-observations","dir":"Articles","previous_headings":"","what":"Checking observations","title":"excluder","text":"check_*() suite functions return data frame includes observations meet criterion. Since functions first run appropriate mark_*() function, also print message number observations meet exclusion criterion. checks return rows meeting criteria, connected via pipes unless want subset second check criterion within rows meet first criterion. check data multiple criteria, use mark_*() functions followed filter.","code":"# Check for rows with incomplete data df %>%   check_progress() #> ℹ 6 out of 100 rows did not complete the study. #> # A tibble: 6 × 16 #>   StartDate           EndDate             Status     IPAddress    Progress #>   <dttm>              <dttm>              <chr>      <chr>           <dbl> #> 1 2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address 22.51.31.0         99 #> 2 2020-12-17 15:40:56 2020-12-17 15:46:23 IP Address 71.146.112.0        1 #> 3 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address 15.223.0.0         13 #> 4 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address 19.127.87.0        48 #> 5 2020-12-17 15:49:42 2020-12-17 15:51:50 IP Address 40.146.247.0        5 #> 6 2020-12-17 15:49:28 2020-12-17 15:55:06 IP Address 2.246.67.0         44 #> # ℹ 11 more variables: `Duration (in seconds)` <dbl>, Finished <lgl>, #> #   RecordedDate <dttm>, ResponseId <chr>, LocationLatitude <dbl>, #> #   LocationLongitude <dbl>, UserLanguage <chr>, Browser <chr>, Version <chr>, #> #   `Operating System` <chr>, Resolution <chr> # Check for rows with durations less than 100 seconds df %>%   check_duration(min_duration = 100) #> ℹ 4 out of 100 rows took less time than 100. #> # A tibble: 4 × 16 #>   StartDate           EndDate             Status     IPAddress    Progress #>   <dttm>              <dttm>              <chr>      <chr>           <dbl> #> 1 2020-12-11 16:59:08 2020-12-11 17:02:05 IP Address 84.56.189.0       100 #> 2 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address 15.223.0.0         13 #> 3 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address 19.127.87.0        48 #> 4 2020-12-17 15:46:46 2020-12-17 15:49:02 IP Address 21.134.217.0      100 #> # ℹ 11 more variables: `Duration (in seconds)` <dbl>, Finished <lgl>, #> #   RecordedDate <dttm>, ResponseId <chr>, LocationLatitude <dbl>, #> #   LocationLongitude <dbl>, UserLanguage <chr>, Browser <chr>, Version <chr>, #> #   `Operating System` <chr>, Resolution <chr> # Check for rows with durations less than 100 seconds in rows that did not complete the survey df %>%   check_progress() %>%   check_duration(min_duration = 100) #> ℹ 6 out of 100 rows did not complete the study. #> ℹ 2 out of 6 rows took less time than 100. #> # A tibble: 2 × 16 #>   StartDate           EndDate             Status     IPAddress   Progress #>   <dttm>              <dttm>              <chr>      <chr>          <dbl> #> 1 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address 15.223.0.0        13 #> 2 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address 19.127.87.0       48 #> # ℹ 11 more variables: `Duration (in seconds)` <dbl>, Finished <lgl>, #> #   RecordedDate <dttm>, ResponseId <chr>, LocationLatitude <dbl>, #> #   LocationLongitude <dbl>, UserLanguage <chr>, Browser <chr>, Version <chr>, #> #   `Operating System` <chr>, Resolution <chr> # Check for multiple criteria df %>%   mark_preview() %>%   mark_duration(min = 500) %>%   unite_exclusions() %>%   dplyr::filter(exclusions != \"\") #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #> ℹ 82 out of 100 rows took less time than 500. #> # A tibble: 83 × 17 #>    StartDate           EndDate             Status         IPAddress    Progress #>    <dttm>              <dttm>              <chr>          <chr>           <dbl> #>  1 2020-12-11 12:06:52 2020-12-11 12:10:30 Survey Preview NA                100 #>  2 2020-12-11 12:06:43 2020-12-11 12:11:27 Survey Preview NA                100 #>  3 2020-12-11 12:17:41 2020-12-11 12:22:07 IP Address     16.140.105.0      100 #>  4 2020-12-11 12:19:45 2020-12-11 12:23:16 IP Address     107.57.244.0      100 #>  5 2020-12-11 12:37:51 2020-12-11 12:43:09 IP Address     15.232.167.0      100 #>  6 2020-12-11 12:41:23 2020-12-11 12:44:37 IP Address     24.195.91.0       100 #>  7 2020-12-11 12:55:35 2020-12-11 12:59:24 IP Address     51.113.171.0      100 #>  8 2020-12-11 13:22:34 2020-12-11 13:35:19 IP Address     17.163.199.0      100 #>  9 2020-12-11 16:59:08 2020-12-11 17:02:05 IP Address     84.56.189.0       100 #> 10 2020-12-11 17:02:00 2020-12-11 17:03:30 IP Address     70.203.63.0       100 #> # ℹ 73 more rows #> # ℹ 12 more variables: `Duration (in seconds)` <dbl>, Finished <lgl>, #> #   RecordedDate <dttm>, ResponseId <chr>, LocationLatitude <dbl>, #> #   LocationLongitude <dbl>, UserLanguage <chr>, Browser <chr>, Version <chr>, #> #   `Operating System` <chr>, Resolution <chr>, exclusions <chr>"},{"path":"https://docs.ropensci.org/excluder/articles/excluder.html","id":"excluding-observations","dir":"Articles","previous_headings":"","what":"Excluding observations","title":"excluder","text":"exclude_*() suite function return data frame removed observations match exclusion criteria. Exclude functions print messages number observations excluded. Piping apply subsequent excludes data frames previous excludes already applied. Therefore, often makes sense remove preview surveys incomplete surveys checking exclusion types speed processing.","code":"# Exclude survey responses used to preview the survey df %>%   exclude_preview() %>%   dplyr::glimpse() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> Rows: 98 #> Columns: 16 #> $ StartDate               <dttm> 2020-12-11 12:17:22, 2020-12-11 12:17:41, 202… #> $ EndDate                 <dttm> 2020-12-11 12:21:41, 2020-12-11 12:22:07, 202… #> $ Status                  <chr> \"IP Address\", \"IP Address\", \"IP Address\", \"IP … #> $ IPAddress               <chr> \"73.23.43.0\", \"16.140.105.0\", \"107.57.244.0\", … #> $ Progress                <dbl> 100, 100, 100, 100, 100, 100, 100, 100, 100, 1… #> $ `Duration (in seconds)` <dbl> 651, 409, 140, 213, 177, 662, 296, 277, 54, 43… #> $ Finished                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ RecordedDate            <dttm> 2020-12-11 12:21:42, 2020-12-11 12:22:07, 202… #> $ ResponseId              <chr> \"R_fbYBeNscosfzN9L\", \"R_yyG1HGXOMNPfWDn\", \"R_9… #> $ LocationLatitude        <dbl> 34.03852, 44.96581, 27.98064, 29.76499, 40.335… #> $ LocationLongitude       <dbl> -118.25739, -93.07187, -82.78531, -95.36156, -… #> $ UserLanguage            <chr> \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\"… #> $ Browser                 <chr> \"Chrome\", \"Chrome\", \"Chrome\", \"Chrome\", \"Chrom… #> $ Version                 <chr> \"87.0.4280.88\", \"87.0.4280.88\", \"87.0.4280.88\"… #> $ `Operating System`      <chr> \"Windows NT 10.0\", \"Windows NT 10.0\", \"Windows… #> $ Resolution              <chr> \"1366x768\", \"1536x864\", \"1536x864\", \"1366x768\"… # Exclude preview then incomplete progress rows then duplicate locations and IP addresses df %>%   exclude_preview() %>%   exclude_progress() %>%   exclude_duplicates(print = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows with incomplete progress were excluded, leaving 92 rows. #> ℹ 9 out of 92 duplicate rows were excluded, leaving 83 rows."},{"path":"https://docs.ropensci.org/excluder/articles/excluder.html","id":"messages-and-console-output","dir":"Articles","previous_headings":"","what":"Messages and console output","title":"excluder","text":"Messages number rows meeting exclusion criteria printed console default. messages generated mark_*() functions carry check_*() functions. can turn setting quiet TRUE. Note exclude_*() functions mark_*() messages turned default produce messages exclusions. silence messages, set silent TRUE. Though exclude_*() functions print data frame console, mark_*() check_*() . avoid printing console, set print = FALSE.","code":"# Turn off marking/checking messages with quiet = TRUE df %>%   check_progress(quiet = TRUE) #> # A tibble: 6 × 16 #>   StartDate           EndDate             Status     IPAddress    Progress #>   <dttm>              <dttm>              <chr>      <chr>           <dbl> #> 1 2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address 22.51.31.0         99 #> 2 2020-12-17 15:40:56 2020-12-17 15:46:23 IP Address 71.146.112.0        1 #> 3 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address 15.223.0.0         13 #> 4 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address 19.127.87.0        48 #> 5 2020-12-17 15:49:42 2020-12-17 15:51:50 IP Address 40.146.247.0        5 #> 6 2020-12-17 15:49:28 2020-12-17 15:55:06 IP Address 2.246.67.0         44 #> # ℹ 11 more variables: `Duration (in seconds)` <dbl>, Finished <lgl>, #> #   RecordedDate <dttm>, ResponseId <chr>, LocationLatitude <dbl>, #> #   LocationLongitude <dbl>, UserLanguage <chr>, Browser <chr>, Version <chr>, #> #   `Operating System` <chr>, Resolution <chr> # Turn off exclusion messages with silent = TRUE df %>%   exclude_preview(silent = TRUE) %>%   exclude_progress(silent = TRUE) %>%   exclude_duplicates(silent = TRUE) #> # A tibble: 83 × 16 #>    StartDate           EndDate             Status     IPAddress    Progress #>    <dttm>              <dttm>              <chr>      <chr>           <dbl> #>  1 2020-12-11 12:17:22 2020-12-11 12:21:41 IP Address 73.23.43.0        100 #>  2 2020-12-11 12:17:41 2020-12-11 12:22:07 IP Address 16.140.105.0      100 #>  3 2020-12-11 12:19:45 2020-12-11 12:23:16 IP Address 107.57.244.0      100 #>  4 2020-12-11 12:37:51 2020-12-11 12:43:09 IP Address 15.232.167.0      100 #>  5 2020-12-11 12:37:04 2020-12-11 12:45:50 IP Address 98.75.201.0       100 #>  6 2020-12-11 12:55:35 2020-12-11 12:59:24 IP Address 51.113.171.0      100 #>  7 2020-12-11 13:22:34 2020-12-11 13:35:19 IP Address 17.163.199.0      100 #>  8 2020-12-11 16:59:08 2020-12-11 17:02:05 IP Address 84.56.189.0       100 #>  9 2020-12-11 17:02:00 2020-12-11 17:03:30 IP Address 70.203.63.0       100 #> 10 2020-12-11 17:01:32 2020-12-11 17:09:41 IP Address 33.185.89.0       100 #> # ℹ 73 more rows #> # ℹ 11 more variables: `Duration (in seconds)` <dbl>, Finished <lgl>, #> #   RecordedDate <dttm>, ResponseId <chr>, LocationLatitude <dbl>, #> #   LocationLongitude <dbl>, UserLanguage <chr>, Browser <chr>, Version <chr>, #> #   `Operating System` <chr>, Resolution <chr> # Turn off marking/checking printing data frame with print = FALSE df %>%   check_progress(print = FALSE) #> ℹ 6 out of 100 rows did not complete the study."},{"path":"https://docs.ropensci.org/excluder/articles/excluder.html","id":"deidentifying-data","dir":"Articles","previous_headings":"","what":"Deidentifying data","title":"excluder","text":"default, Qualtrics records participant IP address location.2 can also record properties participants’ computers operating system, web browser type version, screen resolution.3 pieces information can useful excluding observations, carry potentially identifiable information. Therefore, may want remove data frame saving processing . deidentify() function removes potentially identifiable data columns collected Qualtrics. default, function uses strict rule remove IP address, location, computer information (browser type version, operating system, screen resolution). computer information considered sensitive, can kept setting strict argument FALSE, thereby removing IP address location.","code":"# Exclude preview then incomplete progress rows df %>%   exclude_preview() %>%   exclude_progress() %>%   exclude_duplicates() %>%   deidentify() %>%   dplyr::glimpse() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows with incomplete progress were excluded, leaving 92 rows. #> ℹ 9 out of 92 duplicate rows were excluded, leaving 83 rows. #> Rows: 83 #> Columns: 8 #> $ StartDate               <dttm> 2020-12-11 12:17:22, 2020-12-11 12:17:41, 202… #> $ EndDate                 <dttm> 2020-12-11 12:21:41, 2020-12-11 12:22:07, 202… #> $ Status                  <chr> \"IP Address\", \"IP Address\", \"IP Address\", \"IP … #> $ Progress                <dbl> 100, 100, 100, 100, 100, 100, 100, 100, 100, 1… #> $ `Duration (in seconds)` <dbl> 651, 409, 140, 213, 662, 296, 277, 54, 432, 10… #> $ Finished                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ RecordedDate            <dttm> 2020-12-11 12:21:42, 2020-12-11 12:22:07, 202… #> $ ResponseId              <chr> \"R_fbYBeNscosfzN9L\", \"R_yyG1HGXOMNPfWDn\", \"R_9… # Exclude preview then incomplete progress rows df %>%   exclude_preview() %>%   exclude_progress() %>%   exclude_duplicates() %>%   deidentify(strict = FALSE) %>%   dplyr::glimpse() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows with incomplete progress were excluded, leaving 92 rows. #> ℹ 9 out of 92 duplicate rows were excluded, leaving 83 rows. #> Rows: 83 #> Columns: 12 #> $ StartDate               <dttm> 2020-12-11 12:17:22, 2020-12-11 12:17:41, 202… #> $ EndDate                 <dttm> 2020-12-11 12:21:41, 2020-12-11 12:22:07, 202… #> $ Status                  <chr> \"IP Address\", \"IP Address\", \"IP Address\", \"IP … #> $ Progress                <dbl> 100, 100, 100, 100, 100, 100, 100, 100, 100, 1… #> $ `Duration (in seconds)` <dbl> 651, 409, 140, 213, 662, 296, 277, 54, 432, 10… #> $ Finished                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ RecordedDate            <dttm> 2020-12-11 12:21:42, 2020-12-11 12:22:07, 202… #> $ ResponseId              <chr> \"R_fbYBeNscosfzN9L\", \"R_yyG1HGXOMNPfWDn\", \"R_9… #> $ Browser                 <chr> \"Chrome\", \"Chrome\", \"Chrome\", \"Chrome\", \"Edge\"… #> $ Version                 <chr> \"87.0.4280.88\", \"87.0.4280.88\", \"87.0.4280.88\"… #> $ `Operating System`      <chr> \"Windows NT 10.0\", \"Windows NT 10.0\", \"Windows… #> $ Resolution              <chr> \"1366x768\", \"1536x864\", \"1536x864\", \"1366x768\"…"},{"path":"https://docs.ropensci.org/excluder/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jeffrey R. Stevens. Author, maintainer, copyright holder. Joseph O'Brien. Reviewer. Julia Silge. Reviewer.","code":""},{"path":"https://docs.ropensci.org/excluder/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stevens, J. R. (2021). excluder: R package checks exclusion criteria online data. Journal Open Source Software, 6(67), 3893. https://doi.org/10.21105/joss.03893","code":"@Article{,   title = {excluder: An R package that checks for exclusion criteria in online data},   author = {Jeffrey R. Stevens},   year = {2021},   journal = {Journal of Open Source Software},   volume = {6},   number = {67},   pages = {3893},   url = {https://doi.org/10.21105/joss.03893},   doi = {10.21105/joss.03893}, }"},{"path":"https://docs.ropensci.org/excluder/index.html","id":"excluder-","dir":"","previous_headings":"","what":"Checks for Exclusion Criteria in Online Data","title":"Checks for Exclusion Criteria in Online Data","text":"goal {excluder} facilitate checking , marking, excluding rows data frames common exclusion criteria. package applies data collected Qualtrics surveys, default column names come importing data {qualtRics} package. may useful Mechanical Turk data screen duplicate entries location/IP address entries locations outside United States. can used generally exclude based response durations, preview status, progress, screen resolution. details available package website getting started vignette.","code":""},{"path":"https://docs.ropensci.org/excluder/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Checks for Exclusion Criteria in Online Data","text":"can install stable released version excluder CRAN : can install developmental versions GitHub :","code":"install.packages(\"excluder\") # install.packages(\"remotes\") remotes::install_github(\"ropensci/excluder\")"},{"path":"https://docs.ropensci.org/excluder/index.html","id":"verbs","dir":"","previous_headings":"","what":"Verbs","title":"Checks for Exclusion Criteria in Online Data","text":"package provides three primary verbs: mark functions add new column original data frame labels rows meeting exclusion criteria. useful label potential exclusions future processing without changing original data frame. check functions search exclusion criteria output message number rows meeting criteria data frame rows meeting criteria. useful viewing potential exclusions. exclude functions remove rows meeting exclusion criteria. safest checking rows ensure exclusions correct.","code":""},{"path":"https://docs.ropensci.org/excluder/index.html","id":"exclusion-types","dir":"","previous_headings":"","what":"Exclusion types","title":"Checks for Exclusion Criteria in Online Data","text":"package provides seven types exclusions based Qualtrics metadata. ideas metadata exclusions, please submit issues. Note, intent package develop functions excluding rows based survey-specific data general, frequently used metadata. duplicates works rows duplicate IP addresses /locations (latitude/longitude). duration works rows whose survey completion time short /long. ip works rows whose IP addresses found specified country (note: exclusion type requires internet connection download country’s IP ranges). location works rows whose latitude longitude found United States. preview works rows survey previews. progress works rows survey complete. resolution works rows whose screen resolution acceptable.","code":""},{"path":"https://docs.ropensci.org/excluder/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Checks for Exclusion Criteria in Online Data","text":"verbs exclusion types combine _ create functions, check_duplicates(), exclude_ip(), mark_duration(). Multiple functions can linked together using {magrittr} pipe %>%. datasets downloaded directly Qualtrics, use remove_label_rows() remove first two rows labels convert date numeric columns metadata, use deidentify() remove standard Qualtrics columns identifiable information (e.g., IP addresses, geolocation).","code":""},{"path":"https://docs.ropensci.org/excluder/index.html","id":"marking","dir":"","previous_headings":"Usage","what":"Marking","title":"Checks for Exclusion Criteria in Online Data","text":"mark_*() functions output original data set new column specifying rows meet exclusion criteria. can piped together %>% multiple exclusion types. Use unite_exclusions() function unite marked columns single column.","code":"library(excluder) # Mark preview and short duration rows df <- qualtrics_text %>%   mark_preview() %>%   mark_duration(min_duration = 200) #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #> ℹ 23 out of 100 rows took less time than 200. tibble::glimpse(df) #> Rows: 100 #> Columns: 18 #> $ StartDate               <dttm> 2020-12-11 12:06:52, 2020-12-11 12:06:43, 202… #> $ EndDate                 <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ Status                  <chr> \"Survey Preview\", \"Survey Preview\", \"IP Addres… #> $ IPAddress               <chr> NA, NA, \"73.23.43.0\", \"16.140.105.0\", \"107.57.… #> $ Progress                <dbl> 100, 100, 100, 100, 100, 100, 100, 100, 100, 1… #> $ `Duration (in seconds)` <dbl> 465, 545, 651, 409, 140, 213, 177, 662, 296, 2… #> $ Finished                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ RecordedDate            <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ ResponseId              <chr> \"R_xLWiuPaNuURSFXY\", \"R_Q5lqYw6emJQZx2o\", \"R_f… #> $ LocationLatitude        <dbl> 29.73694, 39.74107, 34.03852, 44.96581, 27.980… #> $ LocationLongitude       <dbl> -94.97599, -121.82490, -118.25739, -93.07187, … #> $ UserLanguage            <chr> \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\"… #> $ Browser                 <chr> \"Chrome\", \"Chrome\", \"Chrome\", \"Chrome\", \"Chrom… #> $ Version                 <chr> \"88.0.4324.41\", \"88.0.4324.50\", \"87.0.4280.88\"… #> $ `Operating System`      <chr> \"Windows NT 10.0\", \"Macintosh\", \"Windows NT 10… #> $ Resolution              <chr> \"1366x768\", \"1680x1050\", \"1366x768\", \"1536x864… #> $ exclusion_preview       <chr> \"preview\", \"preview\", \"\", \"\", \"\", \"\", \"\", \"\", … #> $ exclusion_duration      <chr> \"\", \"\", \"\", \"\", \"duration_quick\", \"\", \"duratio… # Collapse labels for preview and short duration rows df <- qualtrics_text %>%   mark_preview() %>%   mark_duration(min_duration = 200) %>%   unite_exclusions() #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #> ℹ 23 out of 100 rows took less time than 200. tibble::glimpse(df) #> Rows: 100 #> Columns: 17 #> $ StartDate               <dttm> 2020-12-11 12:06:52, 2020-12-11 12:06:43, 202… #> $ EndDate                 <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ Status                  <chr> \"Survey Preview\", \"Survey Preview\", \"IP Addres… #> $ IPAddress               <chr> NA, NA, \"73.23.43.0\", \"16.140.105.0\", \"107.57.… #> $ Progress                <dbl> 100, 100, 100, 100, 100, 100, 100, 100, 100, 1… #> $ `Duration (in seconds)` <dbl> 465, 545, 651, 409, 140, 213, 177, 662, 296, 2… #> $ Finished                <lgl> TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUE… #> $ RecordedDate            <dttm> 2020-12-11 12:10:30, 2020-12-11 12:11:27, 202… #> $ ResponseId              <chr> \"R_xLWiuPaNuURSFXY\", \"R_Q5lqYw6emJQZx2o\", \"R_f… #> $ LocationLatitude        <dbl> 29.73694, 39.74107, 34.03852, 44.96581, 27.980… #> $ LocationLongitude       <dbl> -94.97599, -121.82490, -118.25739, -93.07187, … #> $ UserLanguage            <chr> \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\", \"EN\"… #> $ Browser                 <chr> \"Chrome\", \"Chrome\", \"Chrome\", \"Chrome\", \"Chrom… #> $ Version                 <chr> \"88.0.4324.41\", \"88.0.4324.50\", \"87.0.4280.88\"… #> $ `Operating System`      <chr> \"Windows NT 10.0\", \"Macintosh\", \"Windows NT 10… #> $ Resolution              <chr> \"1366x768\", \"1680x1050\", \"1366x768\", \"1536x864… #> $ exclusions              <chr> \"preview\", \"preview\", \"\", \"\", \"duration_quick\"…"},{"path":"https://docs.ropensci.org/excluder/index.html","id":"checking","dir":"","previous_headings":"Usage","what":"Checking","title":"Checks for Exclusion Criteria in Online Data","text":"check_*() functions output messages number rows meet exclusion criteria. checks return rows meeting criteria, connected via pipes unless want subset second check criterion within rows meet first criterion. Thus, general, check_*() functions used individually. want view potential exclusions multiple criteria, use mark_*() functions.","code":"# Check for preview rows qualtrics_text %>%   check_preview() #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #>             StartDate             EndDate         Status IPAddress Progress #> 1 2020-12-11 12:06:52 2020-12-11 12:10:30 Survey Preview      <NA>      100 #> 2 2020-12-11 12:06:43 2020-12-11 12:11:27 Survey Preview      <NA>      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   465     TRUE 2020-12-11 12:10:30 R_xLWiuPaNuURSFXY #> 2                   545     TRUE 2020-12-11 12:11:27 R_Q5lqYw6emJQZx2o #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         29.73694         -94.97599           EN  Chrome 88.0.4324.41 #> 2         39.74107        -121.82490           EN  Chrome 88.0.4324.50 #>   Operating System Resolution #> 1  Windows NT 10.0   1366x768 #> 2        Macintosh  1680x1050"},{"path":"https://docs.ropensci.org/excluder/index.html","id":"excluding","dir":"","previous_headings":"Usage","what":"Excluding","title":"Checks for Exclusion Criteria in Online Data","text":"exclude_*() functions remove rows meet exclusion criteria. , , can piped together. Since output function subset original data excluded rows removed, order functions influence reported number rows meeting exclusion criteria. Though order functions influence final data set, may speed processing large files removing preview incomplete progress data first waiting check IP addresses locations exclusions performed.","code":"# Exclude preview then incomplete progress rows df <- qualtrics_text %>%   exclude_duration(min_duration = 100) %>%   exclude_progress() #> ℹ 4 out of 100 rows of short and/or long duration were excluded, leaving 96 rows. #> ℹ 4 out of 96 rows with incomplete progress were excluded, leaving 92 rows. dim(df) #> [1] 92 16 # Exclude incomplete progress then preview rows df <- qualtrics_text %>%   exclude_progress() %>%   exclude_duration(min_duration = 100) #> ℹ 6 out of 100 rows with incomplete progress were excluded, leaving 94 rows. #> ℹ 2 out of 94 rows of short and/or long duration were excluded, leaving 92 rows. dim(df) #> [1] 92 16 # Exclude rows df <- qualtrics_text %>%   exclude_preview() %>%   exclude_progress() %>%   exclude_duplicates() %>%   exclude_duration(min_duration = 100) %>%   exclude_resolution() %>%   exclude_ip() %>%   exclude_location() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows with incomplete progress were excluded, leaving 92 rows. #> ℹ 9 out of 92 duplicate rows were excluded, leaving 83 rows. #> ℹ 2 out of 83 rows of short and/or long duration were excluded, leaving 81 rows. #> ℹ 3 out of 81 rows with unacceptable screen resolution were excluded, leaving 78 rows. #> ℹ 2 out of 78 rows with IP addresses outside of US were excluded, leaving 76 rows. #> ℹ 4 out of 76 rows outside of the US were excluded, leaving 72 rows."},{"path":"https://docs.ropensci.org/excluder/index.html","id":"citing-this-package","dir":"","previous_headings":"","what":"Citing this package","title":"Checks for Exclusion Criteria in Online Data","text":"cite excluder, use: Stevens, J. R. (2021). excluder: R package checks exclusion criteria online data. Journal Open Source Software, 6(67), 3893. https://doi.org/10.21105/joss.03893","code":""},{"path":"https://docs.ropensci.org/excluder/index.html","id":"contributing-to-this-package","dir":"","previous_headings":"","what":"Contributing to this package","title":"Checks for Exclusion Criteria in Online Data","text":"Contributions excluder welcome! Feel free check open issues ideas. pull requests encouraged, may want raise issue contact maintainer first. Please note excluder project released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/excluder/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Checks for Exclusion Criteria in Online Data","text":"thank Francine Goh Billy Lim comments early version package, well insightful feedback rOpenSci editor Mauro Lepore reviewers Joseph O’Brien Julia Silge. work funded US National Science Foundation grant NSF-1658837.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for duplicate IP addresses and/or locations — check_duplicates","title":"Check for duplicate IP addresses and/or locations — check_duplicates","text":"check_duplicates() function subsets rows data, retaining rows IP address /latitude longitude. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for duplicate IP addresses and/or locations — check_duplicates","text":"","code":"check_duplicates(   x,   id_col = \"ResponseId\",   ip_col = \"IPAddress\",   location_col = c(\"LocationLatitude\", \"LocationLongitude\"),   rename = TRUE,   dupl_ip = TRUE,   dupl_location = TRUE,   include_na = FALSE,   keep = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/check_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for duplicate IP addresses and/or locations — check_duplicates","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). ip_col Column name IP addresses. location_col Two element vector specifying columns latitude longitude (order). rename Logical indicating whether rename columns (using rename_columns()) dupl_ip Logical indicating whether check IP addresses. dupl_location Logical indicating whether check latitude longitude. include_na Logical indicating whether include rows NAs IP address location potentially excluded rows. keep Logical indicating whether keep remove exclusion column. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for duplicate IP addresses and/or locations — check_duplicates","text":"object type x includes rows duplicate IP addresses /locations. includes column called dupe_count returns number duplicates. function marks rows, use mark_duplicates(). function excludes rows, use exclude_duplicates().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_duplicates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for duplicate IP addresses and/or locations — check_duplicates","text":"record information Qualtrics survey, must ensure Anonymize responses disabled. Default column names set based output qualtRics::fetch_survey(). default, IP address location checked, can checked separately dupl_ip dupl_location arguments. function outputs console separate messages number rows duplicate IP addresses rows duplicate locations. counts computed independently, rows may counted types duplicates.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/check_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for duplicate IP addresses and/or locations — check_duplicates","text":"","code":"# Check for duplicate IP addresses and locations data(qualtrics_text) check_duplicates(qualtrics_text) #> ℹ 2 NAs were found in IP addresses. #> ℹ 7 out of 7 rows had duplicate IP addresses. #> ℹ 1 NA was found in location. #> ℹ 10 out of 10 rows had duplicate locations. #>              StartDate             EndDate     Status    IPAddress Progress #> 1  2020-12-11 12:41:23 2020-12-11 12:44:37 IP Address  24.195.91.0      100 #> 2  2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address   22.51.31.0       99 #> 3  2020-12-17 15:40:52 2020-12-17 15:43:39 IP Address 32.164.134.0      100 #> 4  2020-12-17 15:41:17 2020-12-17 15:45:42 IP Address  24.195.91.0      100 #> 5  2020-12-17 15:42:47 2020-12-17 15:46:26 IP Address  55.73.114.0      100 #> 6  2020-12-17 15:42:18 2020-12-17 15:48:00 IP Address  55.73.114.0      100 #> 7  2020-12-17 15:40:57 2020-12-17 15:48:56 IP Address   6.79.107.0      100 #> 8  2020-12-17 15:46:51 2020-12-17 15:51:38 IP Address   22.51.31.0      100 #> 9  2020-12-17 15:48:53 2020-12-17 15:53:48 IP Address   22.51.31.0      100 #> 10 2020-12-17 15:48:48 2020-12-17 15:54:12 IP Address 54.232.129.0      100 #>    Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                    177     TRUE 2020-12-11 12:44:37 R_LAt58JGEyKNWZlB #> 2                    879    FALSE 2020-12-17 15:43:25 R_AkQyJypPyjgribz #> 3                    375     TRUE 2020-12-17 15:43:39 R_H5MqcQoWznreNBt #> 4                    521     TRUE 2020-12-17 15:45:42 R_GNVaLC9Sb2ZDzQP #> 5                    236     TRUE 2020-12-17 15:46:26 R_7UzegytocfkyrWC #> 6                    526     TRUE 2020-12-17 15:48:00 R_NiK6d3RgjuJh1OI #> 7                    397     TRUE 2020-12-17 15:48:56 R_8ezIj0X0p2lJuCQ #> 8                    872     TRUE 2020-12-17 15:51:39 R_Gbz5en48KgnCXT7 #> 9                    246     TRUE 2020-12-17 15:53:48 R_AJfrQqClQNvWIch #> 10                   149     TRUE 2020-12-17 15:54:12 R_Kc9BGXO793zEqHM #>    LocationLatitude LocationLongitude UserLanguage Browser       Version #> 1          40.33554         -75.92698           EN  Chrome 86.0.4240.198 #> 2          37.28265        -120.50248           EN  Chrome  87.0.4280.88 #> 3          45.50412        -122.78665           EN  Chrome  87.0.4280.88 #> 4          40.33554         -75.92698           EN  Chrome  87.0.4280.88 #> 5          28.56411         -81.54902           EN  Chrome  87.0.4280.88 #> 6          28.56411         -81.54902           EN  Chrome  87.0.4280.88 #> 7          45.50412        -122.78665           EN  Chrome  87.0.4280.88 #> 8          37.28265        -120.50248           EN Firefox          83.0 #> 9          37.28265        -120.50248           EN    Edge   84.0.522.52 #> 10         45.50412        -122.78665           EN  Chrome  87.0.4280.88 #>    Operating System Resolution #> 1         Macintosh   1280x800 #> 2   Windows NT 10.0   1366x768 #> 3   Windows NT 10.0  1920x1080 #> 4    Windows NT 6.1   1366x768 #> 5   Windows NT 10.0  1920x1080 #> 6   Windows NT 10.0   1536x864 #> 7   Windows NT 10.0   1536x864 #> 8   Windows NT 10.0   1440x960 #> 9   Windows NT 10.0  1920x1080 #> 10  Windows NT 10.0  1920x1080  # Check only for duplicate locations qualtrics_text %>%   check_duplicates(dupl_location = FALSE) #> ℹ 2 NAs were found in IP addresses. #> ℹ 7 out of 7 rows had duplicate IP addresses. #>             StartDate             EndDate     Status   IPAddress Progress #> 1 2020-12-11 12:41:23 2020-12-11 12:44:37 IP Address 24.195.91.0      100 #> 2 2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address  22.51.31.0       99 #> 3 2020-12-17 15:41:17 2020-12-17 15:45:42 IP Address 24.195.91.0      100 #> 4 2020-12-17 15:42:47 2020-12-17 15:46:26 IP Address 55.73.114.0      100 #> 5 2020-12-17 15:42:18 2020-12-17 15:48:00 IP Address 55.73.114.0      100 #> 6 2020-12-17 15:46:51 2020-12-17 15:51:38 IP Address  22.51.31.0      100 #> 7 2020-12-17 15:48:53 2020-12-17 15:53:48 IP Address  22.51.31.0      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   177     TRUE 2020-12-11 12:44:37 R_LAt58JGEyKNWZlB #> 2                   879    FALSE 2020-12-17 15:43:25 R_AkQyJypPyjgribz #> 3                   521     TRUE 2020-12-17 15:45:42 R_GNVaLC9Sb2ZDzQP #> 4                   236     TRUE 2020-12-17 15:46:26 R_7UzegytocfkyrWC #> 5                   526     TRUE 2020-12-17 15:48:00 R_NiK6d3RgjuJh1OI #> 6                   872     TRUE 2020-12-17 15:51:39 R_Gbz5en48KgnCXT7 #> 7                   246     TRUE 2020-12-17 15:53:48 R_AJfrQqClQNvWIch #>   LocationLatitude LocationLongitude UserLanguage Browser       Version #> 1         40.33554         -75.92698           EN  Chrome 86.0.4240.198 #> 2         37.28265        -120.50248           EN  Chrome  87.0.4280.88 #> 3         40.33554         -75.92698           EN  Chrome  87.0.4280.88 #> 4         28.56411         -81.54902           EN  Chrome  87.0.4280.88 #> 5         28.56411         -81.54902           EN  Chrome  87.0.4280.88 #> 6         37.28265        -120.50248           EN Firefox          83.0 #> 7         37.28265        -120.50248           EN    Edge   84.0.522.52 #>   Operating System Resolution #> 1        Macintosh   1280x800 #> 2  Windows NT 10.0   1366x768 #> 3   Windows NT 6.1   1366x768 #> 4  Windows NT 10.0  1920x1080 #> 5  Windows NT 10.0   1536x864 #> 6  Windows NT 10.0   1440x960 #> 7  Windows NT 10.0  1920x1080  # Do not print rows to console qualtrics_text %>%   check_duplicates(print = FALSE) #> ℹ 2 NAs were found in IP addresses. #> ℹ 7 out of 7 rows had duplicate IP addresses. #> ℹ 1 NA was found in location. #> ℹ 10 out of 10 rows had duplicate locations.  # Do not print message to console qualtrics_text %>%   check_duplicates(quiet = TRUE) #>              StartDate             EndDate     Status    IPAddress Progress #> 1  2020-12-11 12:41:23 2020-12-11 12:44:37 IP Address  24.195.91.0      100 #> 2  2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address   22.51.31.0       99 #> 3  2020-12-17 15:40:52 2020-12-17 15:43:39 IP Address 32.164.134.0      100 #> 4  2020-12-17 15:41:17 2020-12-17 15:45:42 IP Address  24.195.91.0      100 #> 5  2020-12-17 15:42:47 2020-12-17 15:46:26 IP Address  55.73.114.0      100 #> 6  2020-12-17 15:42:18 2020-12-17 15:48:00 IP Address  55.73.114.0      100 #> 7  2020-12-17 15:40:57 2020-12-17 15:48:56 IP Address   6.79.107.0      100 #> 8  2020-12-17 15:46:51 2020-12-17 15:51:38 IP Address   22.51.31.0      100 #> 9  2020-12-17 15:48:53 2020-12-17 15:53:48 IP Address   22.51.31.0      100 #> 10 2020-12-17 15:48:48 2020-12-17 15:54:12 IP Address 54.232.129.0      100 #>    Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                    177     TRUE 2020-12-11 12:44:37 R_LAt58JGEyKNWZlB #> 2                    879    FALSE 2020-12-17 15:43:25 R_AkQyJypPyjgribz #> 3                    375     TRUE 2020-12-17 15:43:39 R_H5MqcQoWznreNBt #> 4                    521     TRUE 2020-12-17 15:45:42 R_GNVaLC9Sb2ZDzQP #> 5                    236     TRUE 2020-12-17 15:46:26 R_7UzegytocfkyrWC #> 6                    526     TRUE 2020-12-17 15:48:00 R_NiK6d3RgjuJh1OI #> 7                    397     TRUE 2020-12-17 15:48:56 R_8ezIj0X0p2lJuCQ #> 8                    872     TRUE 2020-12-17 15:51:39 R_Gbz5en48KgnCXT7 #> 9                    246     TRUE 2020-12-17 15:53:48 R_AJfrQqClQNvWIch #> 10                   149     TRUE 2020-12-17 15:54:12 R_Kc9BGXO793zEqHM #>    LocationLatitude LocationLongitude UserLanguage Browser       Version #> 1          40.33554         -75.92698           EN  Chrome 86.0.4240.198 #> 2          37.28265        -120.50248           EN  Chrome  87.0.4280.88 #> 3          45.50412        -122.78665           EN  Chrome  87.0.4280.88 #> 4          40.33554         -75.92698           EN  Chrome  87.0.4280.88 #> 5          28.56411         -81.54902           EN  Chrome  87.0.4280.88 #> 6          28.56411         -81.54902           EN  Chrome  87.0.4280.88 #> 7          45.50412        -122.78665           EN  Chrome  87.0.4280.88 #> 8          37.28265        -120.50248           EN Firefox          83.0 #> 9          37.28265        -120.50248           EN    Edge   84.0.522.52 #> 10         45.50412        -122.78665           EN  Chrome  87.0.4280.88 #>    Operating System Resolution #> 1         Macintosh   1280x800 #> 2   Windows NT 10.0   1366x768 #> 3   Windows NT 10.0  1920x1080 #> 4    Windows NT 6.1   1366x768 #> 5   Windows NT 10.0  1920x1080 #> 6   Windows NT 10.0   1536x864 #> 7   Windows NT 10.0   1536x864 #> 8   Windows NT 10.0   1440x960 #> 9   Windows NT 10.0  1920x1080 #> 10  Windows NT 10.0  1920x1080"},{"path":"https://docs.ropensci.org/excluder/reference/check_duration.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for minimum or maximum durations — check_duration","title":"Check for minimum or maximum durations — check_duration","text":"check_duration() function subsets rows data, retaining rows durations fast slow. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_duration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for minimum or maximum durations — check_duration","text":"","code":"check_duration(   x,   min_duration = 10,   max_duration = NULL,   id_col = \"ResponseId\",   duration_col = \"Duration (in seconds)\",   rename = TRUE,   keep = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/check_duration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for minimum or maximum durations — check_duration","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). min_duration Minimum duration fast seconds. max_duration Maximum duration slow seconds. id_col Column name unique row ID (e.g., participant). duration_col Column name durations. rename Logical indicating whether rename columns (using rename_columns()) keep Logical indicating whether keep remove exclusion column. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_duration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for minimum or maximum durations — check_duration","text":"object type x includes rows fast /slow duration. function marks rows, use mark_duration(). function excludes rows, use exclude_duration().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_duration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for minimum or maximum durations — check_duration","text":"Default column names set based output qualtRics::fetch_survey(). default, minimum durations 10 seconds checked, either minima maxima can checked min_duration max_duration arguments. function outputs console separate messages number rows fast slow. function returns fast slow rows.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/check_duration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for minimum or maximum durations — check_duration","text":"","code":"# Check for durations faster than 100 seconds data(qualtrics_text) check_duration(qualtrics_text, min_duration = 100) #> ℹ 4 out of 100 rows took less time than 100. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-11 16:59:08 2020-12-11 17:02:05 IP Address  84.56.189.0      100 #> 2 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address   15.223.0.0       13 #> 3 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address  19.127.87.0       48 #> 4 2020-12-17 15:46:46 2020-12-17 15:49:02 IP Address 21.134.217.0      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                    54     TRUE 2020-12-11 17:02:05 R_2RQ5kfCKKHudpj3 #> 2                    40    FALSE 2020-12-17 15:46:37 R_Dx6w74UfhnGhAmj #> 3                    74    FALSE 2020-12-17 15:46:46 R_ewyyOOPADLGo9xZ #> 4                    72     TRUE 2020-12-17 15:49:02 R_PKKUJ04DtpTEire #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         43.23353         -77.55959           EN  Chrome 87.0.4280.88 #> 2         34.77804         -84.96198           DE  Chrome 83.0.4103.61 #> 3         33.66715        -117.82543           EN  Chrome 87.0.4280.88 #> 4         34.76243         -96.69044           EN  Chrome 87.0.4280.88 #>   Operating System Resolution #> 1  Windows NT 10.0   1600x900 #> 2  Windows NT 10.0   1366x768 #> 3  Windows NT 10.0   1188x668 #> 4  Windows NT 10.0   1368x912  # Remove preview data first qualtrics_text %>%   exclude_preview() %>%   check_duration(min_duration = 100) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 4 out of 98 rows took less time than 100. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-11 16:59:08 2020-12-11 17:02:05 IP Address  84.56.189.0      100 #> 2 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address   15.223.0.0       13 #> 3 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address  19.127.87.0       48 #> 4 2020-12-17 15:46:46 2020-12-17 15:49:02 IP Address 21.134.217.0      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                    54     TRUE 2020-12-11 17:02:05 R_2RQ5kfCKKHudpj3 #> 2                    40    FALSE 2020-12-17 15:46:37 R_Dx6w74UfhnGhAmj #> 3                    74    FALSE 2020-12-17 15:46:46 R_ewyyOOPADLGo9xZ #> 4                    72     TRUE 2020-12-17 15:49:02 R_PKKUJ04DtpTEire #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         43.23353         -77.55959           EN  Chrome 87.0.4280.88 #> 2         34.77804         -84.96198           DE  Chrome 83.0.4103.61 #> 3         33.66715        -117.82543           EN  Chrome 87.0.4280.88 #> 4         34.76243         -96.69044           EN  Chrome 87.0.4280.88 #>   Operating System Resolution #> 1  Windows NT 10.0   1600x900 #> 2  Windows NT 10.0   1366x768 #> 3  Windows NT 10.0   1188x668 #> 4  Windows NT 10.0   1368x912  # Check only for durations slower than 800 seconds qualtrics_text %>%   exclude_preview() %>%   check_duration(max_duration = 800) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 0 out of 98 rows took less time than 10. #> ℹ 2 out of 98 rows took more time than 800. #>             StartDate             EndDate     Status  IPAddress Progress #> 1 2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address 22.51.31.0       99 #> 2 2020-12-17 15:46:51 2020-12-17 15:51:38 IP Address 22.51.31.0      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   879    FALSE 2020-12-17 15:43:25 R_AkQyJypPyjgribz #> 2                   872     TRUE 2020-12-17 15:51:39 R_Gbz5en48KgnCXT7 #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         37.28265         -120.5025           EN  Chrome 87.0.4280.88 #> 2         37.28265         -120.5025           EN Firefox         83.0 #>   Operating System Resolution #> 1  Windows NT 10.0   1366x768 #> 2  Windows NT 10.0   1440x960  # Do not print rows to console qualtrics_text %>%   exclude_preview() %>%   check_duration(min_duration = 100, print = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 4 out of 98 rows took less time than 100.  # Do not print message to console qualtrics_text %>%   exclude_preview() %>%   check_duration(min_duration = 100, quiet = TRUE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-11 16:59:08 2020-12-11 17:02:05 IP Address  84.56.189.0      100 #> 2 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address   15.223.0.0       13 #> 3 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address  19.127.87.0       48 #> 4 2020-12-17 15:46:46 2020-12-17 15:49:02 IP Address 21.134.217.0      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                    54     TRUE 2020-12-11 17:02:05 R_2RQ5kfCKKHudpj3 #> 2                    40    FALSE 2020-12-17 15:46:37 R_Dx6w74UfhnGhAmj #> 3                    74    FALSE 2020-12-17 15:46:46 R_ewyyOOPADLGo9xZ #> 4                    72     TRUE 2020-12-17 15:49:02 R_PKKUJ04DtpTEire #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         43.23353         -77.55959           EN  Chrome 87.0.4280.88 #> 2         34.77804         -84.96198           DE  Chrome 83.0.4103.61 #> 3         33.66715        -117.82543           EN  Chrome 87.0.4280.88 #> 4         34.76243         -96.69044           EN  Chrome 87.0.4280.88 #>   Operating System Resolution #> 1  Windows NT 10.0   1600x900 #> 2  Windows NT 10.0   1366x768 #> 3  Windows NT 10.0   1188x668 #> 4  Windows NT 10.0   1368x912"},{"path":"https://docs.ropensci.org/excluder/reference/check_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for IP addresses from outside of a specified country. — check_ip","title":"Check for IP addresses from outside of a specified country. — check_ip","text":"check_ip() function subsets rows data, retaining rows IP addresses outside specified country. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for IP addresses from outside of a specified country. — check_ip","text":"","code":"check_ip(   x,   id_col = \"ResponseId\",   ip_col = \"IPAddress\",   rename = TRUE,   country = \"US\",   include_na = FALSE,   keep = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/check_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for IP addresses from outside of a specified country. — check_ip","text":"x Data frame tibble (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). ip_col Column name IP addresses. rename Logical indicating whether rename columns (using rename_columns()) country Two-letter abbreviation country check (default \"US\"). include_na Logical indicating whether include rows NA IP address column output list potentially excluded data. keep Logical indicating whether keep remove exclusion column. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for IP addresses from outside of a specified country. — check_ip","text":"object type x includes rows IP addresses outside specified country. function marks rows, use mark_ip(). function excludes rows, use exclude_ip().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_ip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for IP addresses from outside of a specified country. — check_ip","text":"record information Qualtrics survey, must ensure Anonymize responses disabled. Default column names set based output qualtRics::fetch_survey(). function uses ipaddress::country_networks() assign IP addresses specific countries using ISO 3166-1 alpha-2 country codes. function outputs console message number rows IP addresses outside specified country. NAs IP addresses (likely due including preview data---see check_preview()), print message alerting number rows NAs.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_ip.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Check for IP addresses from outside of a specified country. — check_ip","text":"function requires internet connectivity uses ipaddress::country_networks() function, pulls daily updated data https://www.iwik.org/ipcountry/. updates data per session, caches results future work session.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/check_ip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for IP addresses from outside of a specified country. — check_ip","text":"","code":"# Check for IP addresses outside of the US data(qualtrics_text) check_ip(qualtrics_text) #> ℹ 2 out of 100 rows had NA values for IP addresses (check for preview data with 'check_preview()'). #> ℹ 4 out of 100 rows had IP address outside of US. #>             StartDate             EndDate     Status   IPAddress Progress #> 1 2020-12-11 16:59:08 2020-12-11 17:02:05 IP Address 84.56.189.0      100 #> 2 2020-12-11 17:09:18 2020-12-11 17:16:57 IP Address 31.252.29.0      100 #> 3 2020-12-17 15:47:37 2020-12-17 15:51:33 IP Address 89.167.14.0      100 #> 4 2020-12-17 15:49:28 2020-12-17 15:55:06 IP Address  2.246.67.0       44 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                    54     TRUE 2020-12-11 17:02:05 R_2RQ5kfCKKHudpj3 #> 2                   229     TRUE 2020-12-11 17:16:57 R_XUU5qhep0Xe1GyW #> 3                   297     TRUE 2020-12-17 15:51:33 R_bEHQBqkV97IcXfD #> 4                   355    FALSE 2020-12-17 15:55:06 R_UfSQq1VXYkVcxdJ #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         43.23353         -77.55959           EN  Chrome 87.0.4280.88 #> 2         33.87347        -117.92215           EN  Chrome 87.0.4280.88 #> 3         35.39816         -78.81702           EN  Chrome 87.0.4280.88 #> 4         37.79058        -121.96737           EN  Chrome 87.0.4280.67 #>   Operating System Resolution #> 1  Windows NT 10.0   1600x900 #> 2  Windows NT 10.0   1366x768 #> 3        Macintosh   1280x800 #> 4        Macintosh   1280x800  # Remove preview data first qualtrics_text %>%   exclude_preview() %>%   check_ip() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 4 out of 98 rows had IP address outside of US. #>             StartDate             EndDate     Status   IPAddress Progress #> 1 2020-12-11 16:59:08 2020-12-11 17:02:05 IP Address 84.56.189.0      100 #> 2 2020-12-11 17:09:18 2020-12-11 17:16:57 IP Address 31.252.29.0      100 #> 3 2020-12-17 15:47:37 2020-12-17 15:51:33 IP Address 89.167.14.0      100 #> 4 2020-12-17 15:49:28 2020-12-17 15:55:06 IP Address  2.246.67.0       44 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                    54     TRUE 2020-12-11 17:02:05 R_2RQ5kfCKKHudpj3 #> 2                   229     TRUE 2020-12-11 17:16:57 R_XUU5qhep0Xe1GyW #> 3                   297     TRUE 2020-12-17 15:51:33 R_bEHQBqkV97IcXfD #> 4                   355    FALSE 2020-12-17 15:55:06 R_UfSQq1VXYkVcxdJ #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         43.23353         -77.55959           EN  Chrome 87.0.4280.88 #> 2         33.87347        -117.92215           EN  Chrome 87.0.4280.88 #> 3         35.39816         -78.81702           EN  Chrome 87.0.4280.88 #> 4         37.79058        -121.96737           EN  Chrome 87.0.4280.67 #>   Operating System Resolution #> 1  Windows NT 10.0   1600x900 #> 2  Windows NT 10.0   1366x768 #> 3        Macintosh   1280x800 #> 4        Macintosh   1280x800  # Check for IP addresses outside of Germany qualtrics_text %>%   exclude_preview() %>%   check_ip(country = \"DE\") #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 94 out of 98 rows had IP address outside of DE. #>              StartDate             EndDate     Status     IPAddress Progress #> 1  2020-12-11 12:17:22 2020-12-11 12:21:41 IP Address    73.23.43.0      100 #> 2  2020-12-11 12:17:41 2020-12-11 12:22:07 IP Address  16.140.105.0      100 #> 3  2020-12-11 12:19:45 2020-12-11 12:23:16 IP Address  107.57.244.0      100 #> 4  2020-12-11 12:37:51 2020-12-11 12:43:09 IP Address  15.232.167.0      100 #> 5  2020-12-11 12:41:23 2020-12-11 12:44:37 IP Address   24.195.91.0      100 #> 6  2020-12-11 12:37:04 2020-12-11 12:45:50 IP Address   98.75.201.0      100 #> 7  2020-12-11 12:55:35 2020-12-11 12:59:24 IP Address  51.113.171.0      100 #> 8  2020-12-11 13:22:34 2020-12-11 13:35:19 IP Address  17.163.199.0      100 #> 9  2020-12-11 17:02:00 2020-12-11 17:03:30 IP Address   70.203.63.0      100 #> 10 2020-12-11 17:01:32 2020-12-11 17:09:41 IP Address   33.185.89.0      100 #> 11 2020-12-11 17:05:21 2020-12-11 17:16:27 IP Address  40.222.151.0      100 #> 12 2020-12-11 17:29:18 2020-12-11 17:34:04 IP Address   64.71.222.0      100 #> 13 2020-12-11 17:34:23 2020-12-11 17:38:04 IP Address   13.139.19.0      100 #> 14 2020-12-11 17:36:12 2020-12-11 17:46:47 IP Address   45.16.214.0      100 #> 15 2020-12-11 17:46:05 2020-12-11 17:52:10 IP Address   76.193.55.0      100 #> 16 2020-12-11 18:01:26 2020-12-11 18:07:19 IP Address  33.129.208.0      100 #> 17 2020-12-17 15:40:59 2020-12-17 15:42:56 IP Address  32.235.180.0      100 #> 18 2020-12-17 15:40:42 2020-12-17 15:43:13 IP Address  23.235.165.0      100 #> 19 2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address    22.51.31.0       99 #> 20 2020-12-17 15:40:52 2020-12-17 15:43:39 IP Address  32.164.134.0      100 #> 21 2020-12-17 15:41:17 2020-12-17 15:43:53 IP Address    34.29.29.0      100 #> 22 2020-12-17 15:41:41 2020-12-17 15:44:08 IP Address  33.171.228.0      100 #> 23 2020-12-17 15:41:05 2020-12-17 15:44:26 IP Address    12.76.83.0      100 #> 24 2020-12-17 15:42:13 2020-12-17 15:44:39 IP Address 107.101.170.0      100 #> 25 2020-12-17 15:42:26 2020-12-17 15:45:01 IP Address  20.217.173.0      100 #> 26 2020-12-17 15:41:01 2020-12-17 15:45:07 IP Address   28.160.55.0      100 #> 27 2020-12-17 15:41:36 2020-12-17 15:45:08 IP Address  69.163.151.0      100 #> 28 2020-12-17 15:41:14 2020-12-17 15:45:19 IP Address    48.46.53.0      100 #> 29 2020-12-17 15:40:46 2020-12-17 15:45:20 IP Address   26.195.73.0      100 #> 30 2020-12-17 15:41:17 2020-12-17 15:45:42 IP Address   24.195.91.0      100 #> 31 2020-12-17 15:42:24 2020-12-17 15:45:47 IP Address   35.98.203.0      100 #> 32 2020-12-17 15:40:50 2020-12-17 15:46:03 IP Address    71.49.49.0      100 #> 33 2020-12-17 15:40:31 2020-12-17 15:46:16 IP Address   44.19.138.0      100 #> 34 2020-12-17 15:40:57 2020-12-17 15:46:19 IP Address  99.120.178.0      100 #> 35 2020-12-17 15:40:56 2020-12-17 15:46:23 IP Address  71.146.112.0        1 #> 36 2020-12-17 15:42:47 2020-12-17 15:46:26 IP Address   55.73.114.0      100 #> 37 2020-12-17 15:41:22 2020-12-17 15:46:29 IP Address   67.49.133.0      100 #> 38 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address    15.223.0.0       13 #> 39 2020-12-17 15:41:41 2020-12-17 15:46:42 IP Address  104.210.32.0      100 #> 40 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address   19.127.87.0       48 #> 41 2020-12-17 15:44:48 2020-12-17 15:46:55 IP Address    72.240.1.0      100 #> 42 2020-12-17 15:41:00 2020-12-17 15:47:08 IP Address 104.243.207.0      100 #> 43 2020-12-17 15:41:25 2020-12-17 15:47:19 IP Address  21.225.119.0      100 #> 44 2020-12-17 15:45:08 2020-12-17 15:47:24 IP Address  16.123.176.0      100 #> 45 2020-12-17 15:41:54 2020-12-17 15:47:24 IP Address   97.10.196.0      100 #> 46 2020-12-17 15:41:00 2020-12-17 15:47:29 IP Address  44.236.187.0      100 #> 47 2020-12-17 15:41:49 2020-12-17 15:47:48 IP Address  38.210.187.0      100 #> 48 2020-12-17 15:44:30 2020-12-17 15:47:57 IP Address    48.17.71.0      100 #> 49 2020-12-17 15:42:18 2020-12-17 15:48:00 IP Address   55.73.114.0      100 #> 50 2020-12-17 15:42:41 2020-12-17 15:48:02 IP Address   6.146.172.0      100 #> 51 2020-12-17 15:43:51 2020-12-17 15:48:19 IP Address   16.136.53.0      100 #> 52 2020-12-17 15:43:54 2020-12-17 15:48:20 IP Address    33.30.59.0      100 #> 53 2020-12-17 15:43:06 2020-12-17 15:48:21 IP Address    66.124.7.0      100 #> 54 2020-12-17 15:42:22 2020-12-17 15:48:38 IP Address   56.195.10.0      100 #> 55 2020-12-17 15:44:32 2020-12-17 15:48:45 IP Address    6.20.135.0      100 #> 56 2020-12-17 15:40:57 2020-12-17 15:48:56 IP Address    6.79.107.0      100 #> 57 2020-12-17 15:46:46 2020-12-17 15:49:02 IP Address  21.134.217.0      100 #> 58 2020-12-17 15:45:41 2020-12-17 15:49:07 IP Address    20.244.6.0      100 #> 59 2020-12-17 15:40:52 2020-12-17 15:49:08 IP Address    99.29.49.0      100 #> 60 2020-12-17 15:44:30 2020-12-17 15:49:22 IP Address  104.41.163.0      100 #> 61 2020-12-17 15:46:56 2020-12-17 15:49:23 IP Address  28.221.112.0      100 #> 62 2020-12-17 15:46:41 2020-12-17 15:49:25 IP Address    47.80.53.0      100 #> 63 2020-12-17 15:41:27 2020-12-17 15:49:47 IP Address  65.159.184.0      100 #> 64 2020-12-17 15:47:34 2020-12-17 15:49:52 IP Address    56.12.83.0      100 #> 65 2020-12-17 15:42:18 2020-12-17 15:50:03 IP Address   16.206.29.0      100 #> 66 2020-12-17 15:42:45 2020-12-17 15:50:13 IP Address    26.236.1.0      100 #> 67 2020-12-17 15:44:11 2020-12-17 15:50:25 IP Address  32.188.104.0      100 #> 68 2020-12-17 15:48:15 2020-12-17 15:50:28 IP Address   38.67.178.0      100 #> 69 2020-12-17 15:41:04 2020-12-17 15:50:31 IP Address    6.10.127.0      100 #> 70 2020-12-17 15:48:12 2020-12-17 15:50:50 IP Address   19.45.134.0      100 #> 71 2020-12-17 15:44:56 2020-12-17 15:51:34 IP Address   12.40.231.0      100 #> 72 2020-12-17 15:46:51 2020-12-17 15:51:38 IP Address    22.51.31.0      100 #> 73 2020-12-17 15:45:51 2020-12-17 15:51:48 IP Address   3.145.255.0      100 #> 74 2020-12-17 15:49:42 2020-12-17 15:51:50 IP Address  40.146.247.0        5 #> 75 2020-12-17 15:46:16 2020-12-17 15:51:50 IP Address   52.94.218.0      100 #> 76 2020-12-17 15:48:36 2020-12-17 15:52:01 IP Address  12.247.210.0      100 #> 77 2020-12-17 15:46:39 2020-12-17 15:52:20 IP Address  76.149.164.0      100 #> 78 2020-12-17 15:45:45 2020-12-17 15:52:23 IP Address   55.85.168.0      100 #> 79 2020-12-17 15:45:14 2020-12-17 15:52:24 IP Address 108.246.109.0      100 #> 80 2020-12-17 15:48:56 2020-12-17 15:52:24 IP Address    35.188.6.0      100 #> 81 2020-12-17 15:41:37 2020-12-17 15:52:39 IP Address    74.20.82.0      100 #> 82 2020-12-17 15:49:09 2020-12-17 15:52:41 IP Address  104.55.125.0      100 #> 83 2020-12-17 15:46:50 2020-12-17 15:53:41 IP Address    52.24.57.0      100 #> 84 2020-12-17 15:48:53 2020-12-17 15:53:48 IP Address    22.51.31.0      100 #> 85 2020-12-17 15:49:06 2020-12-17 15:53:54 IP Address    3.240.10.0      100 #> 86 2020-12-17 15:44:31 2020-12-17 15:54:06 IP Address   38.64.190.0      100 #> 87 2020-12-17 15:48:48 2020-12-17 15:54:12 IP Address  54.232.129.0      100 #> 88 2020-12-17 15:51:16 2020-12-17 15:54:28 IP Address   66.215.26.0      100 #> 89 2020-12-17 15:48:37 2020-12-17 15:55:03 IP Address  98.211.119.0      100 #> 90 2020-12-17 15:50:06 2020-12-17 15:55:03 IP Address   70.38.187.0      100 #> 91 2020-12-17 15:50:21 2020-12-17 15:55:14 IP Address    38.82.71.0      100 #> 92 2020-12-17 15:50:01 2020-12-17 15:55:16 IP Address   66.215.75.0      100 #> 93 2020-12-17 15:47:42 2020-12-17 15:55:23 IP Address    100.26.8.0      100 #> 94 2020-12-17 15:45:16 2020-12-17 15:55:43 IP Address  67.133.227.0      100 #>    Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                    651     TRUE 2020-12-11 12:21:42 R_fbYBeNscosfzN9L #> 2                    409     TRUE 2020-12-11 12:22:07 R_yyG1HGXOMNPfWDn #> 3                    140     TRUE 2020-12-11 12:23:16 R_9dnzH1VI9mf8gle #> 4                    213     TRUE 2020-12-11 12:43:09 R_1BoPF5igdMw536H #> 5                    177     TRUE 2020-12-11 12:44:37 R_LAt58JGEyKNWZlB #> 6                    662     TRUE 2020-12-11 12:45:51 R_6OZ4weICjHVtEkg #> 7                    296     TRUE 2020-12-11 12:59:24 R_Y27gVhACEH3aUUE #> 8                    277     TRUE 2020-12-11 13:35:19 R_ed0N9zgbymHSLLd #> 9                    432     TRUE 2020-12-11 17:03:30 R_EGB3bwfPkaisVrs #> 10                   103     TRUE 2020-12-11 17:09:41 R_pSKmDMG6TiZ0aGN #> 11                   496     TRUE 2020-12-11 17:16:28 R_EDEYKveWY04MZi3 #> 12                   313     TRUE 2020-12-11 17:34:05 R_rCUKbrfaQBx0xf5 #> 13                   321     TRUE 2020-12-11 17:38:04 R_wCVncc0srj4P4A9 #> 14                   299     TRUE 2020-12-11 17:46:48 R_fWk2dUmxcSiN3EJ #> 15                   320     TRUE 2020-12-11 17:52:10 R_yR2DWsoC62ftmmd #> 16                   356     TRUE 2020-12-11 18:07:19 R_9FGBBxoszIYuM6z #> 17                   280     TRUE 2020-12-17 15:42:56 R_R1dUIcQVU8CgOQs #> 18                   434     TRUE 2020-12-17 15:43:13 R_tX5NknhjAYsnwLD #> 19                   879    FALSE 2020-12-17 15:43:25 R_AkQyJypPyjgribz #> 20                   375     TRUE 2020-12-17 15:43:39 R_H5MqcQoWznreNBt #> 21                   163     TRUE 2020-12-17 15:43:54 R_y0u8c7Zoa5hu7JR #> 22                   364     TRUE 2020-12-17 15:44:08 R_zSfDR6JuUPHVgfG #> 23                   470     TRUE 2020-12-17 15:44:26 R_aPsQjtqUx8QyZMw #> 24                   259     TRUE 2020-12-17 15:44:39 R_f6zeQUfBcLcuW0d #> 25                   489     TRUE 2020-12-17 15:45:01 R_4ApQtflpravDDnu #> 26                   283     TRUE 2020-12-17 15:45:07 R_8WYXfpBtVXCyuqK #> 27                   301     TRUE 2020-12-17 15:45:08 R_P2EXpXCEoPMSxFB #> 28                   559     TRUE 2020-12-17 15:45:19 R_vscdIaEwQJtBmR9 #> 29                   341     TRUE 2020-12-17 15:45:21 R_RCLqTKWdIen8A1Z #> 30                   521     TRUE 2020-12-17 15:45:42 R_GNVaLC9Sb2ZDzQP #> 31                   181     TRUE 2020-12-17 15:45:48 R_D6ZNSIORUWkzxos #> 32                   217     TRUE 2020-12-17 15:46:03 R_otvyHTl6FXMLzgd #> 33                   320     TRUE 2020-12-17 15:46:16 R_iUeOCrJmNsXtsXC #> 34                   333     TRUE 2020-12-17 15:46:20 R_HfnAAjNF7JovJbG #> 35                   627    FALSE 2020-12-17 15:46:23 R_1cvaTAoXO7XW1vi #> 36                   236     TRUE 2020-12-17 15:46:26 R_7UzegytocfkyrWC #> 37                   212     TRUE 2020-12-17 15:46:29 R_LqmsoBPL27xOIi3 #> 38                    40    FALSE 2020-12-17 15:46:37 R_Dx6w74UfhnGhAmj #> 39                   264     TRUE 2020-12-17 15:46:42 R_6RYnN4LYlDniV2D #> 40                    74    FALSE 2020-12-17 15:46:46 R_ewyyOOPADLGo9xZ #> 41                   158     TRUE 2020-12-17 15:46:56 R_i7HCAU0w51Aa4MD #> 42                   511     TRUE 2020-12-17 15:47:08 R_LH01951CWD0EpLv #> 43                   181     TRUE 2020-12-17 15:47:19 R_0nj60jONOwpqZLC #> 44                   286     TRUE 2020-12-17 15:47:24 R_o08jpNIfDT6cOdA #> 45                   380     TRUE 2020-12-17 15:47:24 R_9bLdiaLyyfUlM7q #> 46                   459     TRUE 2020-12-17 15:47:29 R_Mn4JCJqe0NwOKpQ #> 47                   368     TRUE 2020-12-17 15:47:48 R_N2k3PNtEAjRI2El #> 48                   339     TRUE 2020-12-17 15:47:58 R_hEJfTQuUySzm9Ef #> 49                   526     TRUE 2020-12-17 15:48:00 R_NiK6d3RgjuJh1OI #> 50                   394     TRUE 2020-12-17 15:48:02 R_uCdD9sfSqOQ418r #> 51                   191     TRUE 2020-12-17 15:48:20 R_VokcYzvEcINQMWt #> 52                   543     TRUE 2020-12-17 15:48:20 R_GCi4SP33Y2O3Zsy #> 53                   210     TRUE 2020-12-17 15:48:22 R_uGam8XPGH3sJ3jH #> 54                   225     TRUE 2020-12-17 15:48:38 R_eFwD4iFzNUTkfpW #> 55                   632     TRUE 2020-12-17 15:48:45 R_YizuQ0gOXYXzgYg #> 56                   397     TRUE 2020-12-17 15:48:56 R_8ezIj0X0p2lJuCQ #> 57                    72     TRUE 2020-12-17 15:49:02 R_PKKUJ04DtpTEire #> 58                   314     TRUE 2020-12-17 15:49:08 R_7lRNLskxLI4PI5f #> 59                   234     TRUE 2020-12-17 15:49:09 R_M8PpmDiJ7vXS9vO #> 60                   166     TRUE 2020-12-17 15:49:22 R_m4feVX6kV1hDKyG #> 61                   641     TRUE 2020-12-17 15:49:24 R_ZBg4KsT1piDqN5Y #> 62                   255     TRUE 2020-12-17 15:49:25 R_Tvk5uhVcSrNuCHa #> 63                   205     TRUE 2020-12-17 15:49:48 R_3CW5AYZbsBMxA3n #> 64                   136     TRUE 2020-12-17 15:49:52 R_eW74UodPpyCM0NY #> 65                   566     TRUE 2020-12-17 15:50:04 R_DUMc8sVzlLpu3xE #> 66                   159     TRUE 2020-12-17 15:50:13 R_omYa7FkDOGFV6zK #> 67                   201     TRUE 2020-12-17 15:50:26 R_UIfPuGrPFYRUF3b #> 68                   429     TRUE 2020-12-17 15:50:28 R_gGVBhajYEJQ62KN #> 69                   161     TRUE 2020-12-17 15:50:31 R_seijWfHRUbFPOm0 #> 70                   385     TRUE 2020-12-17 15:50:50 R_qpTsaJuwHs6Cc8b #> 71                   548     TRUE 2020-12-17 15:51:34 R_p8QkyTuxS9RYVWU #> 72                   872     TRUE 2020-12-17 15:51:39 R_Gbz5en48KgnCXT7 #> 73                   348     TRUE 2020-12-17 15:51:49 R_SG9duhsoysmQrZf #> 74                   307    FALSE 2020-12-17 15:51:50 R_HFKclPO5wWGNsFs #> 75                   185     TRUE 2020-12-17 15:51:50 R_5T43AwvQXtF96Hq #> 76                   199     TRUE 2020-12-17 15:52:01 R_QdGXTRC6C6dg0xq #> 77                   373     TRUE 2020-12-17 15:52:20 R_sJcbtpActYeyDwl #> 78                   194     TRUE 2020-12-17 15:52:23 R_DoG50QcwJRIPs99 #> 79                   267     TRUE 2020-12-17 15:52:24 R_CDpEjKb1UgP1KiY #> 80                   175     TRUE 2020-12-17 15:52:25 R_CegS8uh09zOvT6y #> 81                   483     TRUE 2020-12-17 15:52:39 R_cUxV8jJ9yOsYsKa #> 82                   404     TRUE 2020-12-17 15:52:41 R_GWjtLqPIuuKgRZC #> 83                   339     TRUE 2020-12-17 15:53:41 R_et8rmjaxZ4F0MqM #> 84                   246     TRUE 2020-12-17 15:53:48 R_AJfrQqClQNvWIch #> 85                   293     TRUE 2020-12-17 15:53:55 R_KiVCN59xWUnZyLw #> 86                   312     TRUE 2020-12-17 15:54:07 R_uu1aNgZJKe3i8oI #> 87                   149     TRUE 2020-12-17 15:54:12 R_Kc9BGXO793zEqHM #> 88                   285     TRUE 2020-12-17 15:54:28 R_SwoiAKU1uTqAjZH #> 89                   518     TRUE 2020-12-17 15:55:03 R_oTn6oGRmfWcIM1m #> 90                   267     TRUE 2020-12-17 15:55:04 R_Qbx9mK1iPLJzc4r #> 91                   703     TRUE 2020-12-17 15:55:15 R_ZYQSiMjNqYEVHN4 #> 92                   525     TRUE 2020-12-17 15:55:16 R_I8rAyEeHD7f3bHi #> 93                   147     TRUE 2020-12-17 15:55:23 R_OvEVgjfLzfiZ8lB #> 94                   154     TRUE 2020-12-17 15:55:43 R_iEgZWF5bmgsCZvG #>    LocationLatitude LocationLongitude UserLanguage       Browser       Version #> 1          34.03852        -118.25739           EN        Chrome  87.0.4280.88 #> 2          44.96581         -93.07187           EN        Chrome  87.0.4280.88 #> 3          27.98064         -82.78531           EN        Chrome  87.0.4280.88 #> 4          29.76499         -95.36156           EN        Chrome  87.0.4280.88 #> 5          40.33554         -75.92698           EN        Chrome 86.0.4240.198 #> 6          29.41433         -98.50342           EN          Edge   84.0.522.52 #> 7          40.69746         -74.02277           EN        Chrome  87.0.4280.88 #> 8          33.41401        -111.55062           EN       Firefox          83.0 #> 9          39.95853         -75.15760           EN          Edge   84.0.522.52 #> 10         41.72026         -87.74872           EN       Firefox          84.0 #> 11         43.60660        -116.39702           EN        Chrome 84.0.4147.136 #> 12         38.30621         -85.80354           EN        Chrome  87.0.4280.88 #> 13         39.94426         -75.17187           EN        Chrome  87.0.4280.88 #> 14         30.44958         -84.26941           EN        Chrome  87.0.4280.88 #> 15         36.87392         -89.59066           EN        Chrome 86.0.4240.199 #> 16         38.86740         -77.11789           EN        Chrome  87.0.4280.88 #> 17         42.91094         -87.86027           EN        Chrome  87.0.4280.88 #> 18         42.48020         -71.28746           EN        Chrome  87.0.4280.88 #> 19         37.28265        -120.50248           EN        Chrome  87.0.4280.88 #> 20         45.50412        -122.78665           EN        Chrome  87.0.4280.88 #> 21         43.07659         -89.41012           EN        Chrome  87.0.4280.88 #> 22         31.21322         -85.40050           EN        Chrome  87.0.4280.88 #> 23         39.02141         -87.72310           EN        Chrome  87.0.4280.88 #> 24         42.43382        -123.33358           EN       Firefox          84.0 #> 25         43.18294         -85.24739           EN        Chrome  88.0.4324.27 #> 26         43.36813        -124.21626           EN        Chrome  87.0.4280.88 #> 27         37.32957        -122.02562           EN          Edge   84.0.522.52 #> 28         37.32346        -122.03172           EN        Chrome  87.0.4280.88 #> 29         42.25303         -71.00212           EN        Chrome  87.0.4280.88 #> 30         40.33554         -75.92698           EN        Chrome  87.0.4280.88 #> 31         43.01740         -83.68259           EN        Chrome  87.0.4280.88 #> 32         42.71054         -73.74890           EN        Chrome  87.0.4280.88 #> 33         42.33122         -77.65774           EN        Chrome  87.0.4280.88 #> 34         34.04487        -118.25104           EN        Chrome 87.0.4280.109 #> 35         34.03605        -117.04066           EN          <NA>          <NA> #> 36         28.56411         -81.54902           EN        Chrome  87.0.4280.88 #> 37         29.76568         -95.36087           EN        Chrome  87.0.4280.88 #> 38         34.77804         -84.96198           DE        Chrome  83.0.4103.61 #> 39         35.91814         -88.77264           EN        Chrome  87.0.4280.88 #> 40         33.66715        -117.82543           EN        Chrome  87.0.4280.88 #> 41         41.85443         -87.64565           EN        Chrome  87.0.4280.88 #> 42         34.50406         -82.64951           EN        Chrome  87.0.4280.88 #> 43         40.87077         -73.96697           EN        Chrome  87.0.4280.88 #> 44         34.08441        -117.44287           EN        Chrome  87.0.4280.88 #> 45               NA                NA           EN        Chrome  87.0.4280.88 #> 46         38.90370         -77.02778           EN        Chrome  87.0.4280.88 #> 47         48.85205         -95.75681           EN        Chrome  87.0.4280.88 #> 48         40.71187         -74.00837           EN Chrome iPhone  87.0.4280.77 #> 49         28.56411         -81.54902           EN        Chrome  87.0.4280.88 #> 50         39.61266         -86.10765           EN        Chrome  87.0.4280.88 #> 51         34.08953        -117.62469           EN        Chrome  87.0.4280.88 #> 52         45.51576        -122.68390           EN        Chrome  87.0.4280.88 #> 53         39.92034         -75.12523           EN        Chrome  87.0.4280.88 #> 54         40.35586         -74.68112           EN        Chrome  87.0.4280.88 #> 55         39.62145        -104.94657           EN        Chrome  87.0.4280.88 #> 56         45.50412        -122.78665           EN        Chrome  87.0.4280.88 #> 57         34.76243         -96.69044           EN        Chrome  87.0.4280.88 #> 58         30.22021         -92.02372           EN        Chrome  87.0.4280.88 #> 59         40.70961         -74.01063           EN        Chrome 87.0.4280.109 #> 60         39.26736         -76.79828           EN       Firefox          83.0 #> 61         44.31560         -69.77450           EN        Chrome  87.0.4280.88 #> 62         45.52602        -122.67364           EN          Edge   88.0.705.18 #> 63         33.67348        -111.94295           EN        Chrome  87.0.4280.88 #> 64         45.48118        -122.80960           EN        Chrome  87.0.4280.88 #> 65         36.16582        -115.14638           EN        Chrome  86.0.4240.75 #> 66         30.43275         -84.28624           EN        Chrome  87.0.4280.88 #> 67         41.85307         -87.64701           EN        Chrome  87.0.4280.88 #> 68         32.23909        -110.90913           EN          Edge   87.0.664.66 #> 69         41.10140         -73.96800           EN        Chrome  87.0.4280.88 #> 70         41.86902         -87.63458           EN        Chrome  87.0.4280.88 #> 71         32.92666         -96.75124           EN        Chrome  87.0.4280.88 #> 72         37.28265        -120.50248           EN       Firefox          83.0 #> 73         39.46953         -87.41108           EN        Chrome  87.0.4280.88 #> 74         29.29882         -81.04289           EN       Firefox          81.0 #> 75         36.15678        -115.15541           EN        Chrome  87.0.4280.88 #> 76         35.92692         -88.76387           EN        Chrome 87.0.4280.101 #> 77         30.29587         -81.39196           EN        Chrome  87.0.4280.88 #> 78         39.27688         -76.62569           EN        Chrome  87.0.4280.88 #> 79         33.44272        -112.07971           EN       Firefox          83.0 #> 80         42.28207         -85.59687           EN        Chrome  87.0.4280.88 #> 81         39.63179         -79.95364           EN        Chrome  87.0.4280.88 #> 82         41.44980         -82.18540           EN        Chrome 87.0.4280.101 #> 83         35.47588         -97.50811           EN        Chrome  87.0.4280.88 #> 84         37.28265        -120.50248           EN          Edge   84.0.522.52 #> 85         35.22907         -80.84116           EN        Chrome  87.0.4280.88 #> 86         39.18626         -85.93656           EN        Chrome 86.0.4240.111 #> 87         45.50412        -122.78665           EN        Chrome  87.0.4280.88 #> 88         43.06228         -88.40227           EN        Chrome  87.0.4280.88 #> 89         40.39747         -79.81181           EN        Chrome  88.0.4324.41 #> 90         31.81687         -86.63048           EN       Firefox          84.0 #> 91         39.29035         -76.61222           EN          Edge   84.0.522.52 #> 92         37.44174        -122.14316           EN        Chrome  87.0.4280.88 #> 93         38.34822         -81.63422           EN        Safari        14.0.1 #> 94         28.30875         -81.41260           EN        Chrome  87.0.4280.88 #>           Operating System Resolution #> 1          Windows NT 10.0   1366x768 #> 2          Windows NT 10.0   1536x864 #> 3          Windows NT 10.0   1536x864 #> 4          Windows NT 10.0   1366x768 #> 5                Macintosh   1280x800 #> 6          Windows NT 10.0  1920x1080 #> 7          Windows NT 10.0   1440x900 #> 8          Windows NT 10.0   1440x900 #> 9          Windows NT 10.0  1680x1050 #> 10         Windows NT 10.0   1600x900 #> 11 CrOS armv7l 13099.110.0   1366x768 #> 12         Windows NT 10.0   1536x864 #> 13         Windows NT 10.0   1440x900 #> 14         Windows NT 10.0  1920x1080 #> 15 CrOS x86_64 13421.102.0   1138x640 #> 16         Windows NT 10.0   1536x864 #> 17               Macintosh   1440x900 #> 18         Windows NT 10.0  1920x1080 #> 19         Windows NT 10.0   1366x768 #> 20         Windows NT 10.0  1920x1080 #> 21         Windows NT 10.0   1366x768 #> 22         Windows NT 10.0   1600x900 #> 23         Windows NT 10.0   1366x768 #> 24                  Ubuntu   1280x800 #> 25         Windows NT 10.0  1901x1070 #> 26         Windows NT 10.0  1920x1080 #> 27         Windows NT 10.0  1920x1080 #> 28         Windows NT 10.0   1366x768 #> 29         Windows NT 10.0  1920x1080 #> 30          Windows NT 6.1   1366x768 #> 31         Windows NT 10.0   1360x768 #> 32         Windows NT 10.0  1920x1080 #> 33         Windows NT 10.0   1423x800 #> 34  CrOS x86_64 13505.73.0   1280x850 #> 35                    <NA>       <NA> #> 36         Windows NT 10.0  1920x1080 #> 37         Windows NT 10.0  1920x1080 #> 38         Windows NT 10.0   1366x768 #> 39         Windows NT 10.0   1280x720 #> 40         Windows NT 10.0   1188x668 #> 41         Windows NT 10.0   1280x720 #> 42         Windows NT 10.0   1600x900 #> 43         Windows NT 10.0   1366x768 #> 44         Windows NT 10.0  1920x1080 #> 45         Windows NT 10.0   1536x864 #> 46         Windows NT 10.0  1920x1080 #> 47         Windows NT 10.0  1920x1080 #> 48                  iPhone    375x667 #> 49         Windows NT 10.0   1536x864 #> 50  CrOS x86_64 13505.63.0   1366x768 #> 51         Windows NT 10.0   1536x864 #> 52         Windows NT 10.0  1920x1080 #> 53  CrOS x86_64 13505.63.0   1366x768 #> 54         Windows NT 10.0   1536x864 #> 55          Windows NT 6.3  1920x1080 #> 56         Windows NT 10.0   1536x864 #> 57         Windows NT 10.0   1368x912 #> 58         Windows NT 10.0   1366x768 #> 59  CrOS x86_64 13505.73.0   1366x768 #> 60         Windows NT 10.0  2560x1440 #> 61         Windows NT 10.0   1366x768 #> 62         Windows NT 10.0   1360x768 #> 63         Windows NT 10.0   1280x720 #> 64         Windows NT 10.0   1366x768 #> 65         Windows NT 10.0   1536x864 #> 66         Windows NT 10.0  1920x1080 #> 67         Windows NT 10.0  2560x1440 #> 68         Windows NT 10.0  1920x1080 #> 69         Windows NT 10.0   1600x900 #> 70         Windows NT 10.0  1920x1080 #> 71         Windows NT 10.0   1280x720 #> 72         Windows NT 10.0   1440x960 #> 73         Windows NT 10.0  1280x1024 #> 74         Windows NT 10.0   1366x768 #> 75         Windows NT 10.0  1920x1080 #> 76              Android 10    360x740 #> 77         Windows NT 10.0   1536x864 #> 78  CrOS x86_64 13505.63.0   1366x768 #> 79         Windows NT 10.0  1920x1080 #> 80         Windows NT 10.0   1188x668 #> 81         Windows NT 10.0  1920x1080 #> 82               Android 9    360x740 #> 83  CrOS x86_64 13505.63.0   1366x768 #> 84         Windows NT 10.0  1920x1080 #> 85         Windows NT 10.0  2560x1440 #> 86         Windows NT 10.0  3440x1440 #> 87         Windows NT 10.0  1920x1080 #> 88         Windows NT 10.0   1366x768 #> 89         Windows NT 10.0   1366x768 #> 90                  Ubuntu   1280x800 #> 91         Windows NT 10.0   1536x864 #> 92         Windows NT 10.0   1366x768 #> 93               Macintosh   834x1194 #> 94            Linux x86_64  1920x1080  # Do not print rows to console qualtrics_text %>%   exclude_preview() %>%   check_ip(print = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 4 out of 98 rows had IP address outside of US.  # Do not print message to console qualtrics_text %>%   exclude_preview() %>%   check_ip(quiet = TRUE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #>             StartDate             EndDate     Status   IPAddress Progress #> 1 2020-12-11 16:59:08 2020-12-11 17:02:05 IP Address 84.56.189.0      100 #> 2 2020-12-11 17:09:18 2020-12-11 17:16:57 IP Address 31.252.29.0      100 #> 3 2020-12-17 15:47:37 2020-12-17 15:51:33 IP Address 89.167.14.0      100 #> 4 2020-12-17 15:49:28 2020-12-17 15:55:06 IP Address  2.246.67.0       44 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                    54     TRUE 2020-12-11 17:02:05 R_2RQ5kfCKKHudpj3 #> 2                   229     TRUE 2020-12-11 17:16:57 R_XUU5qhep0Xe1GyW #> 3                   297     TRUE 2020-12-17 15:51:33 R_bEHQBqkV97IcXfD #> 4                   355    FALSE 2020-12-17 15:55:06 R_UfSQq1VXYkVcxdJ #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         43.23353         -77.55959           EN  Chrome 87.0.4280.88 #> 2         33.87347        -117.92215           EN  Chrome 87.0.4280.88 #> 3         35.39816         -78.81702           EN  Chrome 87.0.4280.88 #> 4         37.79058        -121.96737           EN  Chrome 87.0.4280.67 #>   Operating System Resolution #> 1  Windows NT 10.0   1600x900 #> 2  Windows NT 10.0   1366x768 #> 3        Macintosh   1280x800 #> 4        Macintosh   1280x800"},{"path":"https://docs.ropensci.org/excluder/reference/check_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for locations outside of the US — check_location","title":"Check for locations outside of the US — check_location","text":"check_location() function subsets rows data, retaining rows locations outside US. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for locations outside of the US — check_location","text":"","code":"check_location(   x,   id_col = \"ResponseId\",   location_col = c(\"LocationLatitude\", \"LocationLongitude\"),   rename = TRUE,   include_na = FALSE,   keep = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/check_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for locations outside of the US — check_location","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). location_col Two element vector specifying columns latitude longitude (order). rename Logical indicating whether rename columns (using rename_columns()) include_na Logical indicating whether include rows NA latitude longitude columns output list potentially excluded data. keep Logical indicating whether keep remove exclusion column. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for locations outside of the US — check_location","text":"output data frame rows located outside US (include_na == FALSE) rows location information. function marks rows, use mark_location(). function excludes rows, use exclude_location().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_location.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for locations outside of the US — check_location","text":"record information Qualtrics survey, must ensure Anonymize responses disabled. Default column names set based output qualtRics::fetch_survey(). function works United States. uses #' maps::map.() determine latitude longitude inside US. function outputs console message number rows locations outside US.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/check_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for locations outside of the US — check_location","text":"","code":"# Check for locations outside of the US data(qualtrics_text) check_location(qualtrics_text) #> ℹ 1 out of 100 rows had no information on location. #> ℹ 5 out of 100 rows were located outside of the US. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-11 12:55:35 2020-12-11 12:59:24 IP Address 51.113.171.0      100 #> 2 2020-12-17 15:40:46 2020-12-17 15:45:20 IP Address  26.195.73.0      100 #> 3 2020-12-17 15:41:54 2020-12-17 15:47:24 IP Address  97.10.196.0      100 #> 4 2020-12-17 15:44:30 2020-12-17 15:47:57 IP Address   48.17.71.0      100 #> 5 2020-12-17 15:40:52 2020-12-17 15:49:08 IP Address   99.29.49.0      100 #> 6 2020-12-17 15:49:42 2020-12-17 15:51:50 IP Address 40.146.247.0        5 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   296     TRUE 2020-12-11 12:59:24 R_Y27gVhACEH3aUUE #> 2                   341     TRUE 2020-12-17 15:45:21 R_RCLqTKWdIen8A1Z #> 3                   380     TRUE 2020-12-17 15:47:24 R_9bLdiaLyyfUlM7q #> 4                   339     TRUE 2020-12-17 15:47:58 R_hEJfTQuUySzm9Ef #> 5                   234     TRUE 2020-12-17 15:49:09 R_M8PpmDiJ7vXS9vO #> 6                   307    FALSE 2020-12-17 15:51:50 R_HFKclPO5wWGNsFs #>   LocationLatitude LocationLongitude UserLanguage       Browser       Version #> 1         40.69746         -74.02277           EN        Chrome  87.0.4280.88 #> 2         42.25303         -71.00212           EN        Chrome  87.0.4280.88 #> 3               NA                NA           EN        Chrome  87.0.4280.88 #> 4         40.71187         -74.00837           EN Chrome iPhone  87.0.4280.77 #> 5         40.70961         -74.01063           EN        Chrome 87.0.4280.109 #> 6         29.29882         -81.04289           EN       Firefox          81.0 #>         Operating System Resolution #> 1        Windows NT 10.0   1440x900 #> 2        Windows NT 10.0  1920x1080 #> 3        Windows NT 10.0   1536x864 #> 4                 iPhone    375x667 #> 5 CrOS x86_64 13505.73.0   1366x768 #> 6        Windows NT 10.0   1366x768  # Remove preview data first qualtrics_text %>%   exclude_preview() %>%   check_location() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 1 out of 98 rows had no information on location. #> ℹ 5 out of 98 rows were located outside of the US. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-11 12:55:35 2020-12-11 12:59:24 IP Address 51.113.171.0      100 #> 2 2020-12-17 15:40:46 2020-12-17 15:45:20 IP Address  26.195.73.0      100 #> 3 2020-12-17 15:41:54 2020-12-17 15:47:24 IP Address  97.10.196.0      100 #> 4 2020-12-17 15:44:30 2020-12-17 15:47:57 IP Address   48.17.71.0      100 #> 5 2020-12-17 15:40:52 2020-12-17 15:49:08 IP Address   99.29.49.0      100 #> 6 2020-12-17 15:49:42 2020-12-17 15:51:50 IP Address 40.146.247.0        5 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   296     TRUE 2020-12-11 12:59:24 R_Y27gVhACEH3aUUE #> 2                   341     TRUE 2020-12-17 15:45:21 R_RCLqTKWdIen8A1Z #> 3                   380     TRUE 2020-12-17 15:47:24 R_9bLdiaLyyfUlM7q #> 4                   339     TRUE 2020-12-17 15:47:58 R_hEJfTQuUySzm9Ef #> 5                   234     TRUE 2020-12-17 15:49:09 R_M8PpmDiJ7vXS9vO #> 6                   307    FALSE 2020-12-17 15:51:50 R_HFKclPO5wWGNsFs #>   LocationLatitude LocationLongitude UserLanguage       Browser       Version #> 1         40.69746         -74.02277           EN        Chrome  87.0.4280.88 #> 2         42.25303         -71.00212           EN        Chrome  87.0.4280.88 #> 3               NA                NA           EN        Chrome  87.0.4280.88 #> 4         40.71187         -74.00837           EN Chrome iPhone  87.0.4280.77 #> 5         40.70961         -74.01063           EN        Chrome 87.0.4280.109 #> 6         29.29882         -81.04289           EN       Firefox          81.0 #>         Operating System Resolution #> 1        Windows NT 10.0   1440x900 #> 2        Windows NT 10.0  1920x1080 #> 3        Windows NT 10.0   1536x864 #> 4                 iPhone    375x667 #> 5 CrOS x86_64 13505.73.0   1366x768 #> 6        Windows NT 10.0   1366x768  # Do not print rows to console qualtrics_text %>%   exclude_preview() %>%   check_location(print = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 1 out of 98 rows had no information on location. #> ℹ 5 out of 98 rows were located outside of the US.  # Do not print message to console qualtrics_text %>%   exclude_preview() %>%   check_location(quiet = TRUE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-11 12:55:35 2020-12-11 12:59:24 IP Address 51.113.171.0      100 #> 2 2020-12-17 15:40:46 2020-12-17 15:45:20 IP Address  26.195.73.0      100 #> 3 2020-12-17 15:41:54 2020-12-17 15:47:24 IP Address  97.10.196.0      100 #> 4 2020-12-17 15:44:30 2020-12-17 15:47:57 IP Address   48.17.71.0      100 #> 5 2020-12-17 15:40:52 2020-12-17 15:49:08 IP Address   99.29.49.0      100 #> 6 2020-12-17 15:49:42 2020-12-17 15:51:50 IP Address 40.146.247.0        5 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   296     TRUE 2020-12-11 12:59:24 R_Y27gVhACEH3aUUE #> 2                   341     TRUE 2020-12-17 15:45:21 R_RCLqTKWdIen8A1Z #> 3                   380     TRUE 2020-12-17 15:47:24 R_9bLdiaLyyfUlM7q #> 4                   339     TRUE 2020-12-17 15:47:58 R_hEJfTQuUySzm9Ef #> 5                   234     TRUE 2020-12-17 15:49:09 R_M8PpmDiJ7vXS9vO #> 6                   307    FALSE 2020-12-17 15:51:50 R_HFKclPO5wWGNsFs #>   LocationLatitude LocationLongitude UserLanguage       Browser       Version #> 1         40.69746         -74.02277           EN        Chrome  87.0.4280.88 #> 2         42.25303         -71.00212           EN        Chrome  87.0.4280.88 #> 3               NA                NA           EN        Chrome  87.0.4280.88 #> 4         40.71187         -74.00837           EN Chrome iPhone  87.0.4280.77 #> 5         40.70961         -74.01063           EN        Chrome 87.0.4280.109 #> 6         29.29882         -81.04289           EN       Firefox          81.0 #>         Operating System Resolution #> 1        Windows NT 10.0   1440x900 #> 2        Windows NT 10.0  1920x1080 #> 3        Windows NT 10.0   1536x864 #> 4                 iPhone    375x667 #> 5 CrOS x86_64 13505.73.0   1366x768 #> 6        Windows NT 10.0   1366x768"},{"path":"https://docs.ropensci.org/excluder/reference/check_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for survey previews — check_preview","title":"Check for survey previews — check_preview","text":"check_preview() function subsets rows data, retaining rows survey previews. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for survey previews — check_preview","text":"","code":"check_preview(   x,   id_col = \"ResponseId\",   preview_col = \"Status\",   rename = TRUE,   keep = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/check_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for survey previews — check_preview","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). preview_col Column name survey preview. rename Logical indicating whether rename columns (using rename_columns()) keep Logical indicating whether keep remove exclusion column. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for survey previews — check_preview","text":"output data frame rows survey previews. function marks rows, use mark_preview(). function excludes rows, use exclude_preview().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_preview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for survey previews — check_preview","text":"Default column names set based output qualtRics::fetch_survey(). preview column Qualtrics can numeric character vector depending whether exported choice text numeric values. function works . function outputs console message number rows survey previews.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/check_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for survey previews — check_preview","text":"","code":"# Check for survey previews data(qualtrics_text) check_preview(qualtrics_text) #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #>             StartDate             EndDate         Status IPAddress Progress #> 1 2020-12-11 12:06:52 2020-12-11 12:10:30 Survey Preview      <NA>      100 #> 2 2020-12-11 12:06:43 2020-12-11 12:11:27 Survey Preview      <NA>      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   465     TRUE 2020-12-11 12:10:30 R_xLWiuPaNuURSFXY #> 2                   545     TRUE 2020-12-11 12:11:27 R_Q5lqYw6emJQZx2o #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         29.73694         -94.97599           EN  Chrome 88.0.4324.41 #> 2         39.74107        -121.82490           EN  Chrome 88.0.4324.50 #>   Operating System Resolution #> 1  Windows NT 10.0   1366x768 #> 2        Macintosh  1680x1050  # Works for Qualtrics data exported as numeric values, too qualtrics_numeric %>%   check_preview() #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #>             StartDate             EndDate Status IPAddress Progress #> 1 2020-12-11 12:06:52 2020-12-11 12:10:30      1      <NA>      100 #> 2 2020-12-11 12:06:43 2020-12-11 12:11:27      1      <NA>      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   465        1 2020-12-11 12:10:30 R_xLWiuPaNuURSFXY #> 2                   545        1 2020-12-11 12:11:27 R_Q5lqYw6emJQZx2o #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         29.73694         -94.97599           EN  Chrome 88.0.4324.41 #> 2         39.74107        -121.82490           EN  Chrome 88.0.4324.50 #>   Operating System Resolution #> 1  Windows NT 10.0   1366x768 #> 2        Macintosh  1680x1050  # Do not print rows to console qualtrics_text %>%   check_preview(print = FALSE) #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing.  # Do not print message to console qualtrics_text %>%   check_preview(quiet = TRUE) #>             StartDate             EndDate         Status IPAddress Progress #> 1 2020-12-11 12:06:52 2020-12-11 12:10:30 Survey Preview      <NA>      100 #> 2 2020-12-11 12:06:43 2020-12-11 12:11:27 Survey Preview      <NA>      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   465     TRUE 2020-12-11 12:10:30 R_xLWiuPaNuURSFXY #> 2                   545     TRUE 2020-12-11 12:11:27 R_Q5lqYw6emJQZx2o #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         29.73694         -94.97599           EN  Chrome 88.0.4324.41 #> 2         39.74107        -121.82490           EN  Chrome 88.0.4324.50 #>   Operating System Resolution #> 1  Windows NT 10.0   1366x768 #> 2        Macintosh  1680x1050"},{"path":"https://docs.ropensci.org/excluder/reference/check_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for survey progress — check_progress","title":"Check for survey progress — check_progress","text":"check_progress() function subsets rows data, retaining rows incomplete progress. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for survey progress — check_progress","text":"","code":"check_progress(   x,   min_progress = 100,   id_col = \"ResponseId\",   finished_col = \"Finished\",   progress_col = \"Progress\",   rename = TRUE,   keep = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/check_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for survey progress — check_progress","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). min_progress Amount progress considered acceptable include. id_col Column name unique row ID (e.g., participant). finished_col Column name whether survey completed. progress_col Column name percentage survey completed. rename Logical indicating whether rename columns (using rename_columns()) keep Logical indicating whether keep remove exclusion column. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for survey progress — check_progress","text":"output data frame rows incomplete progress. function marks rows, use mark_progress(). function excludes rows, use exclude_progress().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_progress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check for survey progress — check_progress","text":"Default column names set based output qualtRics::fetch_survey(). default requires 100% completion, lower levels completion maybe acceptable can allowed specifying min_progress argument. finished column Qualtrics can numeric character vector depending whether exported choice text numeric values. function works . function outputs console message number rows incomplete progress.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/check_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check for survey progress — check_progress","text":"","code":"# Check for rows with incomplete progress data(qualtrics_text) check_progress(qualtrics_text) #> ℹ 6 out of 100 rows did not complete the study. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address   22.51.31.0       99 #> 2 2020-12-17 15:40:56 2020-12-17 15:46:23 IP Address 71.146.112.0        1 #> 3 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address   15.223.0.0       13 #> 4 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address  19.127.87.0       48 #> 5 2020-12-17 15:49:42 2020-12-17 15:51:50 IP Address 40.146.247.0        5 #> 6 2020-12-17 15:49:28 2020-12-17 15:55:06 IP Address   2.246.67.0       44 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   879    FALSE 2020-12-17 15:43:25 R_AkQyJypPyjgribz #> 2                   627    FALSE 2020-12-17 15:46:23 R_1cvaTAoXO7XW1vi #> 3                    40    FALSE 2020-12-17 15:46:37 R_Dx6w74UfhnGhAmj #> 4                    74    FALSE 2020-12-17 15:46:46 R_ewyyOOPADLGo9xZ #> 5                   307    FALSE 2020-12-17 15:51:50 R_HFKclPO5wWGNsFs #> 6                   355    FALSE 2020-12-17 15:55:06 R_UfSQq1VXYkVcxdJ #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         37.28265        -120.50248           EN  Chrome 87.0.4280.88 #> 2         34.03605        -117.04066           EN    <NA>         <NA> #> 3         34.77804         -84.96198           DE  Chrome 83.0.4103.61 #> 4         33.66715        -117.82543           EN  Chrome 87.0.4280.88 #> 5         29.29882         -81.04289           EN Firefox         81.0 #> 6         37.79058        -121.96737           EN  Chrome 87.0.4280.67 #>   Operating System Resolution #> 1  Windows NT 10.0   1366x768 #> 2             <NA>       <NA> #> 3  Windows NT 10.0   1366x768 #> 4  Windows NT 10.0   1188x668 #> 5  Windows NT 10.0   1366x768 #> 6        Macintosh   1280x800  # Remove preview data first qualtrics_text %>%   exclude_preview() %>%   check_progress() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows did not complete the study. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address   22.51.31.0       99 #> 2 2020-12-17 15:40:56 2020-12-17 15:46:23 IP Address 71.146.112.0        1 #> 3 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address   15.223.0.0       13 #> 4 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address  19.127.87.0       48 #> 5 2020-12-17 15:49:42 2020-12-17 15:51:50 IP Address 40.146.247.0        5 #> 6 2020-12-17 15:49:28 2020-12-17 15:55:06 IP Address   2.246.67.0       44 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   879    FALSE 2020-12-17 15:43:25 R_AkQyJypPyjgribz #> 2                   627    FALSE 2020-12-17 15:46:23 R_1cvaTAoXO7XW1vi #> 3                    40    FALSE 2020-12-17 15:46:37 R_Dx6w74UfhnGhAmj #> 4                    74    FALSE 2020-12-17 15:46:46 R_ewyyOOPADLGo9xZ #> 5                   307    FALSE 2020-12-17 15:51:50 R_HFKclPO5wWGNsFs #> 6                   355    FALSE 2020-12-17 15:55:06 R_UfSQq1VXYkVcxdJ #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         37.28265        -120.50248           EN  Chrome 87.0.4280.88 #> 2         34.03605        -117.04066           EN    <NA>         <NA> #> 3         34.77804         -84.96198           DE  Chrome 83.0.4103.61 #> 4         33.66715        -117.82543           EN  Chrome 87.0.4280.88 #> 5         29.29882         -81.04289           EN Firefox         81.0 #> 6         37.79058        -121.96737           EN  Chrome 87.0.4280.67 #>   Operating System Resolution #> 1  Windows NT 10.0   1366x768 #> 2             <NA>       <NA> #> 3  Windows NT 10.0   1366x768 #> 4  Windows NT 10.0   1188x668 #> 5  Windows NT 10.0   1366x768 #> 6        Macintosh   1280x800  # Include a lower acceptable completion percentage qualtrics_numeric %>%   exclude_preview() %>%   check_progress(min_progress = 98) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 rows did not complete the study, and 5 of those completed less than 98% of the study. #>             StartDate             EndDate Status    IPAddress Progress #> 1 2020-12-17 15:40:56 2020-12-17 15:46:23      0 71.146.112.0        1 #> 2 2020-12-17 15:41:52 2020-12-17 15:46:37      0   15.223.0.0       13 #> 3 2020-12-17 15:41:27 2020-12-17 15:46:45      0  19.127.87.0       48 #> 4 2020-12-17 15:49:42 2020-12-17 15:51:50      0 40.146.247.0        5 #> 5 2020-12-17 15:49:28 2020-12-17 15:55:06      0   2.246.67.0       44 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   627        0 2020-12-17 15:46:23 R_1cvaTAoXO7XW1vi #> 2                    40        0 2020-12-17 15:46:37 R_Dx6w74UfhnGhAmj #> 3                    74        0 2020-12-17 15:46:46 R_ewyyOOPADLGo9xZ #> 4                   307        0 2020-12-17 15:51:50 R_HFKclPO5wWGNsFs #> 5                   355        0 2020-12-17 15:55:06 R_UfSQq1VXYkVcxdJ #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         34.03605        -117.04066           EN    <NA>         <NA> #> 2         34.77804         -84.96198           DE  Chrome 83.0.4103.61 #> 3         33.66715        -117.82543           EN  Chrome 87.0.4280.88 #> 4         29.29882         -81.04289           EN Firefox         81.0 #> 5         37.79058        -121.96737           EN  Chrome 87.0.4280.67 #>   Operating System Resolution #> 1             <NA>       <NA> #> 2  Windows NT 10.0   1366x768 #> 3  Windows NT 10.0   1188x668 #> 4  Windows NT 10.0   1366x768 #> 5        Macintosh   1280x800  # Do not print rows to console qualtrics_text %>%   exclude_preview() %>%   check_progress(print = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows did not complete the study.  # Do not print message to console qualtrics_text %>%   exclude_preview() %>%   check_progress(quiet = TRUE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-17 15:40:53 2020-12-17 15:43:25 IP Address   22.51.31.0       99 #> 2 2020-12-17 15:40:56 2020-12-17 15:46:23 IP Address 71.146.112.0        1 #> 3 2020-12-17 15:41:52 2020-12-17 15:46:37 IP Address   15.223.0.0       13 #> 4 2020-12-17 15:41:27 2020-12-17 15:46:45 IP Address  19.127.87.0       48 #> 5 2020-12-17 15:49:42 2020-12-17 15:51:50 IP Address 40.146.247.0        5 #> 6 2020-12-17 15:49:28 2020-12-17 15:55:06 IP Address   2.246.67.0       44 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   879    FALSE 2020-12-17 15:43:25 R_AkQyJypPyjgribz #> 2                   627    FALSE 2020-12-17 15:46:23 R_1cvaTAoXO7XW1vi #> 3                    40    FALSE 2020-12-17 15:46:37 R_Dx6w74UfhnGhAmj #> 4                    74    FALSE 2020-12-17 15:46:46 R_ewyyOOPADLGo9xZ #> 5                   307    FALSE 2020-12-17 15:51:50 R_HFKclPO5wWGNsFs #> 6                   355    FALSE 2020-12-17 15:55:06 R_UfSQq1VXYkVcxdJ #>   LocationLatitude LocationLongitude UserLanguage Browser      Version #> 1         37.28265        -120.50248           EN  Chrome 87.0.4280.88 #> 2         34.03605        -117.04066           EN    <NA>         <NA> #> 3         34.77804         -84.96198           DE  Chrome 83.0.4103.61 #> 4         33.66715        -117.82543           EN  Chrome 87.0.4280.88 #> 5         29.29882         -81.04289           EN Firefox         81.0 #> 6         37.79058        -121.96737           EN  Chrome 87.0.4280.67 #>   Operating System Resolution #> 1  Windows NT 10.0   1366x768 #> 2             <NA>       <NA> #> 3  Windows NT 10.0   1366x768 #> 4  Windows NT 10.0   1188x668 #> 5  Windows NT 10.0   1366x768 #> 6        Macintosh   1280x800"},{"path":"https://docs.ropensci.org/excluder/reference/check_resolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Check screen resolution — check_resolution","title":"Check screen resolution — check_resolution","text":"check_resolution() function subsets rows data, retaining rows unacceptable screen resolution. can used, example, determine data collected via phones desktop monitors required. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_resolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check screen resolution — check_resolution","text":"","code":"check_resolution(   x,   res_min = 1000,   width_min = 0,   height_min = 0,   id_col = \"ResponseId\",   res_col = \"Resolution\",   rename = TRUE,   keep = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/check_resolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check screen resolution — check_resolution","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). res_min Minimum acceptable screen resolution (width height). width_min Minimum acceptable screen width. height_min Minimum acceptable screen height. id_col Column name unique row ID (e.g., participant). res_col Column name screen resolution (format widthxheight). rename Logical indicating whether rename columns (using rename_columns()) keep Logical indicating whether keep remove exclusion column. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_resolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check screen resolution — check_resolution","text":"output data frame rows unacceptable screen resolutions. includes new columns resolution width height. function marks rows, use mark_resolution(). function excludes rows, use exclude_resolution().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/check_resolution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check screen resolution — check_resolution","text":"record information Qualtrics survey, must insert meta info question. Default column names set based output qualtRics::fetch_survey(). function outputs console message number rows unacceptable screen resolution.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/check_resolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check screen resolution — check_resolution","text":"","code":"# Check for survey previews data(qualtrics_text) check_resolution(qualtrics_text) #> ℹ 3 out of 100 rows had screen resolutions less than 0 or height less than 0. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-17 15:44:30 2020-12-17 15:47:57 IP Address   48.17.71.0      100 #> 2 2020-12-17 15:48:36 2020-12-17 15:52:01 IP Address 12.247.210.0      100 #> 3 2020-12-17 15:49:09 2020-12-17 15:52:41 IP Address 104.55.125.0      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   339     TRUE 2020-12-17 15:47:58 R_hEJfTQuUySzm9Ef #> 2                   199     TRUE 2020-12-17 15:52:01 R_QdGXTRC6C6dg0xq #> 3                   404     TRUE 2020-12-17 15:52:41 R_GWjtLqPIuuKgRZC #>   LocationLatitude LocationLongitude UserLanguage       Browser       Version #> 1         40.71187         -74.00837           EN Chrome iPhone  87.0.4280.77 #> 2         35.92692         -88.76387           EN        Chrome 87.0.4280.101 #> 3         41.44980         -82.18540           EN        Chrome 87.0.4280.101 #>   Operating System Resolution #> 1           iPhone    375x667 #> 2       Android 10    360x740 #> 3        Android 9    360x740  # Remove preview data first qualtrics_text %>%   exclude_preview() %>%   check_resolution() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 3 out of 98 rows had screen resolutions less than 0 or height less than 0. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-17 15:44:30 2020-12-17 15:47:57 IP Address   48.17.71.0      100 #> 2 2020-12-17 15:48:36 2020-12-17 15:52:01 IP Address 12.247.210.0      100 #> 3 2020-12-17 15:49:09 2020-12-17 15:52:41 IP Address 104.55.125.0      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   339     TRUE 2020-12-17 15:47:58 R_hEJfTQuUySzm9Ef #> 2                   199     TRUE 2020-12-17 15:52:01 R_QdGXTRC6C6dg0xq #> 3                   404     TRUE 2020-12-17 15:52:41 R_GWjtLqPIuuKgRZC #>   LocationLatitude LocationLongitude UserLanguage       Browser       Version #> 1         40.71187         -74.00837           EN Chrome iPhone  87.0.4280.77 #> 2         35.92692         -88.76387           EN        Chrome 87.0.4280.101 #> 3         41.44980         -82.18540           EN        Chrome 87.0.4280.101 #>   Operating System Resolution #> 1           iPhone    375x667 #> 2       Android 10    360x740 #> 3        Android 9    360x740  # Do not print rows to console qualtrics_text %>%   exclude_preview() %>%   check_resolution(print = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 3 out of 98 rows had screen resolutions less than 0 or height less than 0.  # Do not print message to console qualtrics_text %>%   exclude_preview() %>%   check_resolution(quiet = TRUE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #>             StartDate             EndDate     Status    IPAddress Progress #> 1 2020-12-17 15:44:30 2020-12-17 15:47:57 IP Address   48.17.71.0      100 #> 2 2020-12-17 15:48:36 2020-12-17 15:52:01 IP Address 12.247.210.0      100 #> 3 2020-12-17 15:49:09 2020-12-17 15:52:41 IP Address 104.55.125.0      100 #>   Duration (in seconds) Finished        RecordedDate        ResponseId #> 1                   339     TRUE 2020-12-17 15:47:58 R_hEJfTQuUySzm9Ef #> 2                   199     TRUE 2020-12-17 15:52:01 R_QdGXTRC6C6dg0xq #> 3                   404     TRUE 2020-12-17 15:52:41 R_GWjtLqPIuuKgRZC #>   LocationLatitude LocationLongitude UserLanguage       Browser       Version #> 1         40.71187         -74.00837           EN Chrome iPhone  87.0.4280.77 #> 2         35.92692         -88.76387           EN        Chrome 87.0.4280.101 #> 3         41.44980         -82.18540           EN        Chrome 87.0.4280.101 #>   Operating System Resolution #> 1           iPhone    375x667 #> 2       Android 10    360x740 #> 3        Android 9    360x740"},{"path":"https://docs.ropensci.org/excluder/reference/collapse_exclusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Unite multiple exclusion columns into single column — collapse_exclusions","title":"Unite multiple exclusion columns into single column — collapse_exclusions","text":"collapse_exclusions() renamed unite_exclusions() create consistent API tidyverse's unite() function---please use unite_exclusions().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/collapse_exclusions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unite multiple exclusion columns into single column — collapse_exclusions","text":"","code":"collapse_exclusions(   x,   exclusion_types = c(\"duplicates\", \"duration\", \"ip\", \"location\", \"preview\", \"progress\",     \"resolution\"),   separator = \",\",   remove = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/deidentify.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove columns that could include identifiable information — deidentify","title":"Remove columns that could include identifiable information — deidentify","text":"deidentify() function selects columns Qualtrics surveys may include identifiable information IP address, location, computer characteristics.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/deidentify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove columns that could include identifiable information — deidentify","text":"","code":"deidentify(x, strict = TRUE)"},{"path":"https://docs.ropensci.org/excluder/reference/deidentify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove columns that could include identifiable information — deidentify","text":"x Data frame (downloaded Qualtrics). strict Logical indicating whether use strict non-strict level deidentification. Strict removes computer information columns addition IP address location.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/deidentify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove columns that could include identifiable information — deidentify","text":"object type x excludes Qualtrics columns identifiable information.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/deidentify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove columns that could include identifiable information — deidentify","text":"function offers two levels deidentification. default strict level removes columns associated IP address location computer information (browser type version, operating system, screen resolution). non-strict level removes columns associated IP address location. Typically, deidentification used end processing pipeline columns can used exclude rows.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/deidentify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove columns that could include identifiable information — deidentify","text":"","code":"names(qualtrics_numeric) #>  [1] \"StartDate\"             \"EndDate\"               \"Status\"                #>  [4] \"IPAddress\"             \"Progress\"              \"Duration (in seconds)\" #>  [7] \"Finished\"              \"RecordedDate\"          \"ResponseId\"            #> [10] \"LocationLatitude\"      \"LocationLongitude\"     \"UserLanguage\"          #> [13] \"Browser\"               \"Version\"               \"Operating System\"      #> [16] \"Resolution\"             # Remove IP address, location, and computer information columns deid <- deidentify(qualtrics_numeric) names(deid) #> [1] \"StartDate\"             \"EndDate\"               \"Status\"                #> [4] \"Progress\"              \"Duration (in seconds)\" \"Finished\"              #> [7] \"RecordedDate\"          \"ResponseId\"             # Remove only IP address and location columns deid2 <- deidentify(qualtrics_numeric, strict = FALSE) names(deid2) #>  [1] \"StartDate\"             \"EndDate\"               \"Status\"                #>  [4] \"Progress\"              \"Duration (in seconds)\" \"Finished\"              #>  [7] \"RecordedDate\"          \"ResponseId\"            \"Browser\"               #> [10] \"Version\"               \"Operating System\"      \"Resolution\""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude rows with duplicate IP addresses and/or locations — exclude_duplicates","title":"Exclude rows with duplicate IP addresses and/or locations — exclude_duplicates","text":"exclude_duplicates() function removes rows data IP address /latitude longitude. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude rows with duplicate IP addresses and/or locations — exclude_duplicates","text":"","code":"exclude_duplicates(   x,   id_col = \"ResponseId\",   ip_col = \"IPAddress\",   location_col = c(\"LocationLatitude\", \"LocationLongitude\"),   rename = TRUE,   dupl_ip = TRUE,   dupl_location = TRUE,   include_na = FALSE,   quiet = TRUE,   print = TRUE,   silent = FALSE )"},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude rows with duplicate IP addresses and/or locations — exclude_duplicates","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). ip_col Column name IP addresses. location_col Two element vector specifying columns latitude longitude (order). rename Logical indicating whether rename columns (using rename_columns()) dupl_ip Logical indicating whether check IP addresses. dupl_location Logical indicating whether check latitude longitude. include_na Logical indicating whether include rows NAs IP address location potentially excluded rows. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console. silent Logical indicating whether print message console. Note argument controls exclude message check message.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude rows with duplicate IP addresses and/or locations — exclude_duplicates","text":"object type x excludes rows duplicate IP addresses /locations. function just checks returns duplicate rows, use check_duplicates(). function marks rows, use mark_duplicates().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duplicates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exclude rows with duplicate IP addresses and/or locations — exclude_duplicates","text":"record information Qualtrics survey, must ensure Anonymize responses disabled. Default column names set based output qualtRics::fetch_survey(). default, IP address location checked, can checked separately dupl_ip dupl_location arguments. function outputs console separate messages number rows duplicate IP addresses rows duplicate locations. counts computed independently, rows may counted types duplicates.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude rows with duplicate IP addresses and/or locations — exclude_duplicates","text":"","code":"# Exclude duplicate IP addresses and locations data(qualtrics_text) df <- exclude_duplicates(qualtrics_text) #> ℹ 10 out of 100 duplicate rows were excluded, leaving 90 rows.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   exclude_duplicates() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 10 out of 98 duplicate rows were excluded, leaving 88 rows.  # Exclude only for duplicate locations df <- qualtrics_text %>%   exclude_preview() %>%   exclude_duplicates(dupl_location = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 7 out of 98 duplicate rows were excluded, leaving 91 rows."},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duration.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude rows with minimum or maximum durations — exclude_duration","title":"Exclude rows with minimum or maximum durations — exclude_duration","text":"exclude_duration() function removes rows data durations fast slow. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude rows with minimum or maximum durations — exclude_duration","text":"","code":"exclude_duration(   x,   min_duration = 10,   max_duration = NULL,   id_col = \"ResponseId\",   duration_col = \"Duration (in seconds)\",   rename = TRUE,   quiet = TRUE,   print = TRUE,   silent = FALSE )"},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude rows with minimum or maximum durations — exclude_duration","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). min_duration Minimum duration fast seconds. max_duration Maximum duration slow seconds. id_col Column name unique row ID (e.g., participant). duration_col Column name durations. rename Logical indicating whether rename columns (using rename_columns()) quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console. silent Logical indicating whether print message console. Note argument controls exclude message check message.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude rows with minimum or maximum durations — exclude_duration","text":"object type x excludes rows fast /slow duration. function checks rows, use check_duration(). function marks rows, use mark_duration().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exclude rows with minimum or maximum durations — exclude_duration","text":"Default column names set based output qualtRics::fetch_survey(). default, minimum durations 10 seconds checked, either minima maxima can checked min_duration max_duration arguments. function outputs console separate messages number rows fast slow. function returns fast slow rows.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/exclude_duration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude rows with minimum or maximum durations — exclude_duration","text":"","code":"# Exclude durations faster than 100 seconds data(qualtrics_text) df <- exclude_duration(qualtrics_text, min_duration = 100) #> ℹ 4 out of 100 rows of short and/or long duration were excluded, leaving 96 rows.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   exclude_duration() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 0 out of 98 rows of short and/or long duration were excluded, leaving 98 rows.  # Exclude only for durations slower than 800 seconds df <- qualtrics_text %>%   exclude_preview() %>%   exclude_duration(max_duration = 800) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 2 out of 98 rows of short and/or long duration were excluded, leaving 96 rows."},{"path":"https://docs.ropensci.org/excluder/reference/exclude_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude IP addresses from outside of a specified country. — exclude_ip","title":"Exclude IP addresses from outside of a specified country. — exclude_ip","text":"exclude_ip() function removes rows data IP addresses outside specified country. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude IP addresses from outside of a specified country. — exclude_ip","text":"","code":"exclude_ip(   x,   id_col = \"ResponseId\",   ip_col = \"IPAddress\",   rename = TRUE,   country = \"US\",   include_na = FALSE,   quiet = TRUE,   print = TRUE,   silent = FALSE )"},{"path":"https://docs.ropensci.org/excluder/reference/exclude_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude IP addresses from outside of a specified country. — exclude_ip","text":"x Data frame tibble (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). ip_col Column name IP addresses. rename Logical indicating whether rename columns (using rename_columns()) country Two-letter abbreviation country check (default \"US\"). include_na Logical indicating whether include rows NA IP address column output list potentially excluded data. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console. silent Logical indicating whether print message console. Note argument controls exclude message check message.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude IP addresses from outside of a specified country. — exclude_ip","text":"object type x excludes rows IP addresses outside specified country. function checks rows, use check_ip(). function marks rows, use mark_ip().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_ip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exclude IP addresses from outside of a specified country. — exclude_ip","text":"record information Qualtrics survey, must ensure Anonymize responses disabled. Default column names set based output qualtRics::fetch_survey(). function uses ipaddress::country_networks() assign IP addresses specific countries using ISO 3166-1 alpha-2 country codes. function outputs console message number rows IP addresses outside specified country. NAs IP addresses (likely due including preview data---see check_preview()), print message alerting number rows NAs.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_ip.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Exclude IP addresses from outside of a specified country. — exclude_ip","text":"function requires internet connectivity uses ipaddress::country_networks() function, pulls daily updated data http://www.iwik.org/ipcountry/. updates data per session, caches results future work session.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/exclude_ip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude IP addresses from outside of a specified country. — exclude_ip","text":"","code":"# Exclude IP addresses outside of the US data(qualtrics_text) df <- exclude_ip(qualtrics_text) #> ℹ 4 out of 100 rows with IP addresses outside of US were excluded, leaving 96 rows.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   exclude_ip() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 4 out of 98 rows with IP addresses outside of US were excluded, leaving 94 rows.  # Exclude IP addresses outside of Germany df <- qualtrics_text %>%   exclude_preview() %>%   exclude_ip(country = \"DE\") #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 94 out of 98 rows with IP addresses outside of DE were excluded, leaving 4 rows."},{"path":"https://docs.ropensci.org/excluder/reference/exclude_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude locations outside of US — exclude_location","title":"Exclude locations outside of US — exclude_location","text":"exclude_location() function removes rows locations outside US. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude locations outside of US — exclude_location","text":"","code":"exclude_location(   x,   id_col = \"ResponseId\",   location_col = c(\"LocationLatitude\", \"LocationLongitude\"),   rename = TRUE,   include_na = FALSE,   quiet = TRUE,   print = TRUE,   silent = FALSE )"},{"path":"https://docs.ropensci.org/excluder/reference/exclude_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude locations outside of US — exclude_location","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). location_col Two element vector specifying columns latitude longitude (order). rename Logical indicating whether rename columns (using rename_columns()) include_na Logical indicating whether include rows NA latitude longitude columns output list potentially excluded data. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console. silent Logical indicating whether print message console. Note argument controls exclude message check message.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude locations outside of US — exclude_location","text":"object type x excludes rows located outside US (include_na == FALSE) rows location information. function checks rows, use check_location(). function marks rows, use mark_location().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_location.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exclude locations outside of US — exclude_location","text":"record information Qualtrics survey, must ensure Anonymize responses disabled. Default column names set based output qualtRics::fetch_survey(). function works United States. uses #' maps::map.() determine latitude longitude inside US. function outputs console message number rows locations outside US.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/exclude_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude locations outside of US — exclude_location","text":"","code":"# Exclude locations outside of the US data(qualtrics_text) df <- exclude_location(qualtrics_text) #> ℹ 6 out of 100 rows outside of the US were excluded, leaving 94 rows.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   exclude_location() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows outside of the US were excluded, leaving 92 rows."},{"path":"https://docs.ropensci.org/excluder/reference/exclude_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude survey previews — exclude_preview","title":"Exclude survey previews — exclude_preview","text":"exclude_preview() function removes rows survey previews. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude survey previews — exclude_preview","text":"","code":"exclude_preview(   x,   id_col = \"ResponseId\",   preview_col = \"Status\",   rename = TRUE,   quiet = TRUE,   print = TRUE,   silent = FALSE )"},{"path":"https://docs.ropensci.org/excluder/reference/exclude_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude survey previews — exclude_preview","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). preview_col Column name survey preview. rename Logical indicating whether rename columns (using rename_columns()) quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console. silent Logical indicating whether print message console. Note argument controls exclude message check message.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude survey previews — exclude_preview","text":"object type x excludes rows survey previews. function checks rows, use check_preview(). function marks rows, use mark_preview().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_preview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exclude survey previews — exclude_preview","text":"Default column names set based output qualtRics::fetch_survey(). preview column Qualtrics can numeric character vector depending whether exported choice text numeric values. function works . function outputs console message number rows survey previews.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/exclude_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude survey previews — exclude_preview","text":"","code":"# Exclude survey previews data(qualtrics_text) df <- exclude_preview(qualtrics_text) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows.  # Works for Qualtrics data exported as numeric values, too df <- qualtrics_numeric %>%   exclude_preview() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows.  # Do not print rows to console df <- qualtrics_text %>%   exclude_preview(print = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows."},{"path":"https://docs.ropensci.org/excluder/reference/exclude_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude survey progress — exclude_progress","title":"Exclude survey progress — exclude_progress","text":"exclude_progress() function removes rows incomplete progress. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude survey progress — exclude_progress","text":"","code":"exclude_progress(   x,   min_progress = 100,   id_col = \"ResponseId\",   finished_col = \"Finished\",   progress_col = \"Progress\",   rename = TRUE,   quiet = TRUE,   print = TRUE,   silent = FALSE )"},{"path":"https://docs.ropensci.org/excluder/reference/exclude_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude survey progress — exclude_progress","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). min_progress Amount progress considered acceptable include. id_col Column name unique row ID (e.g., participant). finished_col Column name whether survey completed. progress_col Column name percentage survey completed. rename Logical indicating whether rename columns (using rename_columns()) quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console. silent Logical indicating whether print message console. Note argument controls exclude message check message.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude survey progress — exclude_progress","text":"object type x excludes rows incomplete progress. function checks rows, use check_progress(). function marks rows, use mark_progress().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_progress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exclude survey progress — exclude_progress","text":"Default column names set based output qualtRics::fetch_survey(). default requires 100% completion, lower levels completion maybe acceptable can allowed specifying min_progress argument. finished column Qualtrics can numeric character vector depending whether exported choice text numeric values. function works . function outputs console message number rows incomplete progress.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/exclude_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude survey progress — exclude_progress","text":"","code":"# Exclude rows with incomplete progress data(qualtrics_text) df <- exclude_progress(qualtrics_text) #> ℹ 6 out of 100 rows with incomplete progress were excluded, leaving 94 rows.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   exclude_progress() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows with incomplete progress were excluded, leaving 92 rows.  # Include a lower acceptable completion percentage df <- qualtrics_numeric %>%   exclude_preview() %>%   exclude_progress(min_progress = 98) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 5 out of 98 rows with incomplete progress were excluded, leaving 93 rows.  # Do not print rows to console df <- qualtrics_text %>%   exclude_preview() %>%   exclude_progress(print = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows with incomplete progress were excluded, leaving 92 rows."},{"path":"https://docs.ropensci.org/excluder/reference/exclude_resolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Exclude unacceptable screen resolution — exclude_resolution","title":"Exclude unacceptable screen resolution — exclude_resolution","text":"exclude_resolution() function removes rows unacceptable screen resolution. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_resolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Exclude unacceptable screen resolution — exclude_resolution","text":"","code":"exclude_resolution(   x,   res_min = 1000,   width_min = 0,   height_min = 0,   id_col = \"ResponseId\",   res_col = \"Resolution\",   rename = TRUE,   quiet = TRUE,   print = TRUE,   silent = FALSE )"},{"path":"https://docs.ropensci.org/excluder/reference/exclude_resolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Exclude unacceptable screen resolution — exclude_resolution","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). res_min Minimum acceptable screen resolution (width height). width_min Minimum acceptable screen width. height_min Minimum acceptable screen height. id_col Column name unique row ID (e.g., participant). res_col Column name screen resolution (format widthxheight). rename Logical indicating whether rename columns (using rename_columns()) quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console. silent Logical indicating whether print message console. Note argument controls exclude message check message.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_resolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Exclude unacceptable screen resolution — exclude_resolution","text":"object type x excludes rows unacceptable screen resolutions. function checks rows, use check_resolution(). function marks rows, use mark_resolution().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/exclude_resolution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Exclude unacceptable screen resolution — exclude_resolution","text":"record information Qualtrics survey, must insert meta info question. Default column names set based output qualtRics::fetch_survey(). function outputs console message number rows unacceptable screen resolution.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/exclude_resolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Exclude unacceptable screen resolution — exclude_resolution","text":"","code":"# Exclude low screen resolutions data(qualtrics_text) df <- exclude_resolution(qualtrics_text) #> ℹ 3 out of 100 rows with unacceptable screen resolution were excluded, leaving 97 rows.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   exclude_resolution() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 3 out of 98 rows with unacceptable screen resolution were excluded, leaving 95 rows."},{"path":"https://docs.ropensci.org/excluder/reference/excluder-package.html","id":null,"dir":"Reference","previous_headings":"","what":"excluder: Checks for Exclusion Criteria in Online Data — excluder-package","title":"excluder: Checks for Exclusion Criteria in Online Data — excluder-package","text":"Data collected online sources Mechanical Turk may require excluding rows IP address duplication, geolocation, completion duration. package facilitates exclusion data Qualtrics datasets.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/excluder-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"excluder: Checks for Exclusion Criteria in Online Data — excluder-package","text":"Maintainer: Jeffrey R. Stevens jeffrey.r.stevens@protonmail.com (ORCID) [copyright holder] contributors: Joseph O'Brien (ORCID) [reviewer] Julia Silge julia.silge@gmail.com (ORCID) [reviewer]","code":""},{"path":"https://docs.ropensci.org/excluder/reference/keep_marked_column.html","id":null,"dir":"Reference","previous_headings":"","what":"Keep column with marked rows — keep_marked_column","title":"Keep column with marked rows — keep_marked_column","text":"check_*() functions, keep column marked rows move first column remove column depending keep flag. function exported.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/keep_marked_column.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Keep column with marked rows — keep_marked_column","text":"","code":"keep_marked_column(x, column, keep)"},{"path":"https://docs.ropensci.org/excluder/reference/keep_marked_column.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Keep column with marked rows — keep_marked_column","text":"x Data set. column Name exclusion column. keep Logical indicating whether keep remove exclusion column.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_duplicates.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark duplicate IP addresses and/or locations — mark_duplicates","title":"Mark duplicate IP addresses and/or locations — mark_duplicates","text":"mark_duplicates() function creates column labeling rows data IP address /latitude longitude. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_duplicates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark duplicate IP addresses and/or locations — mark_duplicates","text":"","code":"mark_duplicates(   x,   id_col = \"ResponseId\",   ip_col = \"IPAddress\",   location_col = c(\"LocationLatitude\", \"LocationLongitude\"),   rename = TRUE,   dupl_ip = TRUE,   dupl_location = TRUE,   include_na = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/mark_duplicates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark duplicate IP addresses and/or locations — mark_duplicates","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). ip_col Column name IP addresses. location_col Two element vector specifying columns latitude longitude (order). rename Logical indicating whether rename columns (using rename_columns()) dupl_ip Logical indicating whether check IP addresses. dupl_location Logical indicating whether check latitude longitude. include_na Logical indicating whether include rows NAs IP address location potentially excluded rows. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_duplicates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark duplicate IP addresses and/or locations — mark_duplicates","text":"object type x includes column marking rows duplicate IP addresses /locations. function just checks returns duplicate rows, use check_duplicates(). function excludes rows, use exclude_duplicates().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_duplicates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark duplicate IP addresses and/or locations — mark_duplicates","text":"record information Qualtrics survey, must ensure Anonymize responses disabled. Default column names set based output qualtRics::fetch_survey(). default, IP address location checked, can checked separately dupl_ip dupl_location arguments. function outputs console separate messages number rows duplicate IP addresses rows duplicate locations. counts computed independently, rows may counted types duplicates.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/mark_duplicates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark duplicate IP addresses and/or locations — mark_duplicates","text":"","code":"# Mark duplicate IP addresses and locations data(qualtrics_text) df <- mark_duplicates(qualtrics_text) #> ℹ 2 NAs were found in IP addresses. #> ℹ 7 out of 7 rows had duplicate IP addresses. #> ℹ 1 NA was found in location. #> ℹ 10 out of 10 rows had duplicate locations.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   mark_duplicates() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 0 NAs were found in IP addresses. #> ℹ 7 out of 7 rows had duplicate IP addresses. #> ℹ 1 NA was found in location. #> ℹ 10 out of 10 rows had duplicate locations.  # Mark only for duplicate locations df <- qualtrics_text %>%   exclude_preview() %>%   mark_duplicates(dupl_location = FALSE) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 0 NAs were found in IP addresses. #> ℹ 7 out of 7 rows had duplicate IP addresses."},{"path":"https://docs.ropensci.org/excluder/reference/mark_duration.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark minimum or maximum durations — mark_duration","title":"Mark minimum or maximum durations — mark_duration","text":"mark_duration() function creates column labeling rows fast /slow duration. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_duration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark minimum or maximum durations — mark_duration","text":"","code":"mark_duration(   x,   min_duration = 10,   max_duration = NULL,   id_col = \"ResponseId\",   duration_col = \"Duration (in seconds)\",   rename = TRUE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/mark_duration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark minimum or maximum durations — mark_duration","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). min_duration Minimum duration fast seconds. max_duration Maximum duration slow seconds. id_col Column name unique row ID (e.g., participant). duration_col Column name durations. rename Logical indicating whether rename columns (using rename_columns()) quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_duration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark minimum or maximum durations — mark_duration","text":"object type x includes column marking rows fast slow duration. function checks rows, use check_duration(). function excludes rows, use exclude_duration().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_duration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark minimum or maximum durations — mark_duration","text":"Default column names set based output qualtRics::fetch_survey(). default, minimum durations 10 seconds checked, either minima maxima can checked min_duration max_duration arguments. function outputs console separate messages number rows fast slow. function returns fast slow rows.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/mark_duration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark minimum or maximum durations — mark_duration","text":"","code":"# Mark durations faster than 100 seconds data(qualtrics_text) df <- mark_duration(qualtrics_text, min_duration = 100) #> ℹ 4 out of 100 rows took less time than 100.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   mark_duration() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 0 out of 98 rows took less time than 10.  # Mark only for durations slower than 800 seconds df <- qualtrics_text %>%   exclude_preview() %>%   mark_duration(max_duration = 800) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 0 out of 98 rows took less time than 10. #> ℹ 2 out of 98 rows took more time than 800."},{"path":"https://docs.ropensci.org/excluder/reference/mark_ip.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark IP addresses from outside of a specified country. — mark_ip","title":"Mark IP addresses from outside of a specified country. — mark_ip","text":"mark_ip() function creates column labeling rows data IP addresses outside specified country. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_ip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark IP addresses from outside of a specified country. — mark_ip","text":"","code":"mark_ip(   x,   id_col = \"ResponseId\",   ip_col = \"IPAddress\",   rename = TRUE,   country = \"US\",   include_na = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/mark_ip.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark IP addresses from outside of a specified country. — mark_ip","text":"x Data frame tibble (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). ip_col Column name IP addresses. rename Logical indicating whether rename columns (using rename_columns()) country Two-letter abbreviation country check (default \"US\"). include_na Logical indicating whether include rows NA IP address column output list potentially excluded data. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_ip.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark IP addresses from outside of a specified country. — mark_ip","text":"object type x includes column marking rows IP addresses outside specified country. function checks rows, use check_ip(). function excludes rows, use exclude_ip().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_ip.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark IP addresses from outside of a specified country. — mark_ip","text":"record information Qualtrics survey, must ensure Anonymize responses disabled. Default column names set based output qualtRics::fetch_survey(). function uses ipaddress::country_networks() assign IP addresses specific countries using ISO 3166-1 alpha-2 country codes. function outputs console message number rows IP addresses outside specified country. NAs IP addresses (likely due including preview data---see check_preview()), print message alerting number rows NAs.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_ip.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Mark IP addresses from outside of a specified country. — mark_ip","text":"function requires internet connectivity uses ipaddress::country_networks() function, pulls daily updated data https://www.iwik.org/ipcountry/. updates data per session, caches results future work session.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/mark_ip.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark IP addresses from outside of a specified country. — mark_ip","text":"","code":"# Mark IP addresses outside of the US data(qualtrics_text) df <- mark_ip(qualtrics_text) #> ℹ 2 out of 100 rows had NA values for IP addresses (check for preview data with 'check_preview()'). #> ℹ 4 out of 100 rows had IP address outside of US.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   mark_ip() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 4 out of 98 rows had IP address outside of US.  # Mark IP addresses outside of Germany df <- qualtrics_text %>%   exclude_preview() %>%   mark_ip(country = \"DE\") #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 94 out of 98 rows had IP address outside of DE."},{"path":"https://docs.ropensci.org/excluder/reference/mark_location.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark locations outside of US — mark_location","title":"Mark locations outside of US — mark_location","text":"mark_location() function creates column labeling rows locations outside US. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark locations outside of US — mark_location","text":"","code":"mark_location(   x,   id_col = \"ResponseId\",   location_col = c(\"LocationLatitude\", \"LocationLongitude\"),   rename = TRUE,   include_na = FALSE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/mark_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark locations outside of US — mark_location","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). location_col Two element vector specifying columns latitude longitude (order). rename Logical indicating whether rename columns (using rename_columns()) include_na Logical indicating whether include rows NA latitude longitude columns output list potentially excluded data. quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_location.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark locations outside of US — mark_location","text":"object type x includes column marking rows located outside US (include_na == FALSE) rows location information. function checks rows, use check_location(). function excludes rows, use exclude_location().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_location.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark locations outside of US — mark_location","text":"record information Qualtrics survey, must ensure Anonymize responses disabled. Default column names set based output qualtRics::fetch_survey(). function works United States. uses #' maps::map.() determine latitude longitude inside US. function outputs console message number rows locations outside US.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/mark_location.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark locations outside of US — mark_location","text":"","code":"# Mark locations outside of the US data(qualtrics_text) df <- mark_location(qualtrics_text) #> ℹ 1 out of 100 rows had no information on location. #> ℹ 5 out of 100 rows were located outside of the US.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   mark_location() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 1 out of 98 rows had no information on location. #> ℹ 5 out of 98 rows were located outside of the US."},{"path":"https://docs.ropensci.org/excluder/reference/mark_preview.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark survey previews — mark_preview","title":"Mark survey previews — mark_preview","text":"mark_preview() function creates column labeling rows survey previews. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_preview.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark survey previews — mark_preview","text":"","code":"mark_preview(   x,   id_col = \"ResponseId\",   preview_col = \"Status\",   rename = TRUE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/mark_preview.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark survey previews — mark_preview","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). id_col Column name unique row ID (e.g., participant). preview_col Column name survey preview. rename Logical indicating whether rename columns (using rename_columns()) quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_preview.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark survey previews — mark_preview","text":"object type x includes column marking rows survey previews. function checks rows, use check_preview(). function excludes rows, use exclude_preview().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_preview.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark survey previews — mark_preview","text":"Default column names set based output qualtRics::fetch_survey(). preview column Qualtrics can numeric character vector depending whether exported choice text numeric values. function works . function outputs console message number rows survey previews.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/mark_preview.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark survey previews — mark_preview","text":"","code":"# Mark survey previews data(qualtrics_text) df <- mark_preview(qualtrics_text) #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing.  # Works for Qualtrics data exported as numeric values, too df <- qualtrics_numeric %>%   mark_preview() #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing."},{"path":"https://docs.ropensci.org/excluder/reference/mark_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark survey progress — mark_progress","title":"Mark survey progress — mark_progress","text":"mark_progress() function creates column labeling rows incomplete progress. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark survey progress — mark_progress","text":"","code":"mark_progress(   x,   min_progress = 100,   id_col = \"ResponseId\",   finished_col = \"Finished\",   progress_col = \"Progress\",   rename = TRUE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/mark_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark survey progress — mark_progress","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). min_progress Amount progress considered acceptable include. id_col Column name unique row ID (e.g., participant). finished_col Column name whether survey completed. progress_col Column name percentage survey completed. rename Logical indicating whether rename columns (using rename_columns()) quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark survey progress — mark_progress","text":"object type x includes column marking rows incomplete progress. function checks rows, use check_progress(). function excludes rows, use exclude_progress().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_progress.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark survey progress — mark_progress","text":"Default column names set based output qualtRics::fetch_survey(). default requires 100% completion, lower levels completion maybe acceptable can allowed specifying min_progress argument. finished column Qualtrics can numeric character vector depending whether exported choice text numeric values. function works . function outputs console message number rows incomplete progress.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/mark_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark survey progress — mark_progress","text":"","code":"# Mark rows with incomplete progress data(qualtrics_text) df <- mark_progress(qualtrics_text) #> ℹ 6 out of 100 rows did not complete the study.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   mark_progress() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 out of 98 rows did not complete the study.  # Include a lower acceptable completion percentage df <- qualtrics_numeric %>%   exclude_preview() %>%   mark_progress(min_progress = 98) #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 6 rows did not complete the study, and 5 of those completed less than 98% of the study."},{"path":"https://docs.ropensci.org/excluder/reference/mark_resolution.html","id":null,"dir":"Reference","previous_headings":"","what":"Mark unacceptable screen resolution — mark_resolution","title":"Mark unacceptable screen resolution — mark_resolution","text":"mark_resolution() function creates column labeling rows unacceptable screen resolution. function written work data Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_resolution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mark unacceptable screen resolution — mark_resolution","text":"","code":"mark_resolution(   x,   res_min = 1000,   width_min = 0,   height_min = 0,   id_col = \"ResponseId\",   res_col = \"Resolution\",   rename = TRUE,   quiet = FALSE,   print = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/mark_resolution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mark unacceptable screen resolution — mark_resolution","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). res_min Minimum acceptable screen resolution (width height). width_min Minimum acceptable screen width. height_min Minimum acceptable screen height. id_col Column name unique row ID (e.g., participant). res_col Column name screen resolution (format widthxheight). rename Logical indicating whether rename columns (using rename_columns()) quiet Logical indicating whether print message console. print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_resolution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mark unacceptable screen resolution — mark_resolution","text":"object type x includes column marking rows unacceptable screen resolutions. function checks rows, use check_resolution(). function excludes rows, use exclude_resolution().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_resolution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mark unacceptable screen resolution — mark_resolution","text":"record information Qualtrics survey, must insert meta info question. Default column names set based output qualtRics::fetch_survey(). function outputs console message number rows unacceptable screen resolution.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/mark_resolution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mark unacceptable screen resolution — mark_resolution","text":"","code":"# Mark low screen resolutions data(qualtrics_text) df <- mark_resolution(qualtrics_text) #> ℹ 3 out of 100 rows had screen resolutions less than 0 or height less than 0.  # Remove preview data first df <- qualtrics_text %>%   exclude_preview() %>%   mark_resolution() #> ℹ 2 out of 100 preview rows were excluded, leaving 98 rows. #> ℹ 3 out of 98 rows had screen resolutions less than 0 or height less than 0."},{"path":"https://docs.ropensci.org/excluder/reference/mark_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Return marked rows — mark_rows","title":"Return marked rows — mark_rows","text":"Create new column marking rows meet exclusion criteria. function exported.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/mark_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return marked rows — mark_rows","text":"","code":"mark_rows(x, filtered_data, id_col, exclusion_type)"},{"path":"https://docs.ropensci.org/excluder/reference/mark_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return marked rows — mark_rows","text":"x Original data. filtered_data Data excluded. id_col Column name unique row ID (e.g., participant). exclusion_type Column name exclusion column.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://docs.ropensci.org/excluder/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://docs.ropensci.org/excluder/reference/print_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Print data to console — print_data","title":"Print data to console — print_data","text":"Prints data console. function exported.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/print_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print data to console — print_data","text":"","code":"print_data(x, print)"},{"path":"https://docs.ropensci.org/excluder/reference/print_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print data to console — print_data","text":"x Data set print print Logical indicating whether print returned tibble console.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/print_exclusion.html","id":null,"dir":"Reference","previous_headings":"","what":"Print number of excluded rows — print_exclusion","title":"Print number of excluded rows — print_exclusion","text":"Prints message console number excluded rows. function exported.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/print_exclusion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print number of excluded rows — print_exclusion","text":"","code":"print_exclusion(remaining_data, x, msg)"},{"path":"https://docs.ropensci.org/excluder/reference/print_exclusion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print number of excluded rows — print_exclusion","text":"remaining_data Data removing exclusions. x Original data removing exclusions. msg Text describe types rows excluded.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Example numeric metadata imported with qualtRics::fetch_survey() from\nsimulated Qualtrics study — qualtrics_fetch","title":"Example numeric metadata imported with qualtRics::fetch_survey() from\nsimulated Qualtrics study — qualtrics_fetch","text":"dataset containing metadata standard Qualtrics survey browser metadata collected exported \"Use numeric values\". data imported using qualtRics::fetch_survey(). data randomly generated using iptools::ip_random() rgeolocate::ip2location() functions.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example numeric metadata imported with qualtRics::fetch_survey() from\nsimulated Qualtrics study — qualtrics_fetch","text":"","code":"qualtrics_fetch"},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_fetch.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example numeric metadata imported with qualtRics::fetch_survey() from\nsimulated Qualtrics study — qualtrics_fetch","text":"data frame 100 rows 17 variables: StartDate date time data collection started, ISO 8601 format EndDate date time data collection ended, ISO 8601 format Status numeric flag preview (1) vs. implemented survey (0) entries IPAddress participant IP address (truncated anonymity) Progress percentage survey completed Duration (seconds) duration time required complete survey, seconds Finished numeric flag whether survey completed (1) progress < 100 (0) RecordedDate date time survey recorded, ISO 8601 format ResponseId random ID participants LocationLatitude latitude geolocated IP address LocationLongitude longitude geolocated IP address UserLanguage language set Qualtrics Q1_Browser user web browser type Q1_Version user web browser version Q1_Operating System user operating system Q1_Resolution user screen resolution Q2 response question whether user liked survey (1 = Yes, 0 = )","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_fetch2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example numeric metadata imported with qualtRics::fetch_survey() from\nsimulated Qualtrics study but with labels included as column names — qualtrics_fetch2","title":"Example numeric metadata imported with qualtRics::fetch_survey() from\nsimulated Qualtrics study but with labels included as column names — qualtrics_fetch2","text":"dataset containing metadata standard Qualtrics survey browser metadata collected exported \"Use numeric values\". data imported using qualtRics::fetch_survey(). secondary labels assigned column names sjlabelled::get_label(). data randomly generated using iptools::ip_random() rgeolocate::ip2location() functions.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_fetch2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example numeric metadata imported with qualtRics::fetch_survey() from\nsimulated Qualtrics study but with labels included as column names — qualtrics_fetch2","text":"","code":"qualtrics_fetch2"},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_fetch2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example numeric metadata imported with qualtRics::fetch_survey() from\nsimulated Qualtrics study but with labels included as column names — qualtrics_fetch2","text":"data frame 100 rows 17 variables: Start Date date time data collection started, ISO 8601 format End Date date time data collection ended, ISO 8601 format Response Type numeric flag preview (1) vs. implemented survey (0) entries IP Address participant IP address (truncated anonymity) Progress percentage survey completed Duration (seconds) duration time required complete survey, seconds Finished numeric flag whether survey completed (1) progress < 100 (0) Recorded Date date time survey recorded, ISO 8601 format Response ID random ID participants Location Latitude latitude geolocated IP address Location Longitude longitude geolocated IP address User Language language set Qualtrics Click write question text - Browser user web browser type Click write question text - Version user web browser version Click write question text - Operating System user operating system Click write question text - Resolution user screen resolution like response question whether user liked survey (1 = Yes, 0 = )","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Example numeric metadata from simulated Qualtrics study — qualtrics_numeric","title":"Example numeric metadata from simulated Qualtrics study — qualtrics_numeric","text":"dataset containing metadata standard Qualtrics survey browser metadata collected exported \"Use numeric values\". data randomly generated using iptools::ip_random() rgeolocate::ip2location() functions.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example numeric metadata from simulated Qualtrics study — qualtrics_numeric","text":"","code":"qualtrics_numeric"},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_numeric.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example numeric metadata from simulated Qualtrics study — qualtrics_numeric","text":"data frame 100 rows 16 variables: StartDate date time data collection started, ISO 8601 format EndDate date time data collection ended, ISO 8601 format Status numeric flag preview (1) vs. implemented survey (0) entries IPAddress participant IP address (truncated anonymity) Progress percentage survey completed Duration (seconds) duration time required complete survey, seconds Finished numeric flag whether survey completed (1) progress < 100 (0) RecordedDate date time survey recorded, ISO 8601 format ResponseId random ID participants LocationLatitude latitude geolocated IP address LocationLongitude longitude geolocated IP address UserLanguage language set Qualtrics Browser user web browser type Version user web browser version Operating System user operating system Resolution user screen resolution","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_raw.html","id":null,"dir":"Reference","previous_headings":"","what":"Example text-based metadata from simulated Qualtrics study — qualtrics_raw","title":"Example text-based metadata from simulated Qualtrics study — qualtrics_raw","text":"dataset containing metadata standard Qualtrics survey browser metadata collected exported \"Use choice text\". data randomly generated using iptools::ip_random() rgeolocate::ip2location() functions. dataset includes two header rows column information exported Qualtrics.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_raw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example text-based metadata from simulated Qualtrics study — qualtrics_raw","text":"","code":"qualtrics_raw"},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_raw.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example text-based metadata from simulated Qualtrics study — qualtrics_raw","text":"data frame 102 rows 16 variables: StartDate date time data collection started, ISO 8601 format EndDate date time data collection ended, ISO 8601 format Status flag preview (Survey Preview) vs. implemented survey (IP Address) entries IPAddress participant IP address (truncated anonymity) Progress percentage survey completed Duration (seconds) duration time required complete survey, seconds Finished logical whether survey completed (TRUE) progress < 100 (FALSE) RecordedDate date time survey recorded, ISO 8601 format ResponseId random ID participants LocationLatitude latitude geolocated IP address LocationLongitude longitude geolocated IP address UserLanguage language set Qualtrics Browser user web browser type Version user web browser version Operating System user operating system Resolution user screen resolution","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_text.html","id":null,"dir":"Reference","previous_headings":"","what":"Example text-based metadata from simulated Qualtrics study — qualtrics_text","title":"Example text-based metadata from simulated Qualtrics study — qualtrics_text","text":"dataset containing metadata standard Qualtrics survey browser metadata collected exported \"Use choice text\". data randomly generated using iptools::ip_random() rgeolocate::ip2location() functions.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_text.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example text-based metadata from simulated Qualtrics study — qualtrics_text","text":"","code":"qualtrics_text"},{"path":"https://docs.ropensci.org/excluder/reference/qualtrics_text.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example text-based metadata from simulated Qualtrics study — qualtrics_text","text":"data frame 100 rows 16 variables: StartDate date time data collection started, ISO 8601 format EndDate date time data collection ended, ISO 8601 format Status flag preview (Survey Preview) vs. implemented survey (IP Address) entries IPAddress participant IP address (truncated anonymity) Progress percentage survey completed Duration (seconds) duration time required complete survey, seconds Finished logical whether survey completed (TRUE) progress < 100 (FALSE) RecordedDate date time survey recorded, ISO 8601 format ResponseId random ID participants LocationLatitude latitude geolocated IP address LocationLongitude longitude geolocated IP address UserLanguage language set Qualtrics Browser user web browser type Version user web browser version Operating System user operating system Resolution user screen resolution","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/remove_label_rows.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove two initial rows created in Qualtrics data — remove_label_rows","title":"Remove two initial rows created in Qualtrics data — remove_label_rows","text":"remove_label_rows() function filters initial label rows datasets downloaded Qualtrics surveys.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/remove_label_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove two initial rows created in Qualtrics data — remove_label_rows","text":"","code":"remove_label_rows(x, convert = TRUE, rename = FALSE)"},{"path":"https://docs.ropensci.org/excluder/reference/remove_label_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove two initial rows created in Qualtrics data — remove_label_rows","text":"x Data frame (downloaded Qualtrics). convert Logical indicating whether convert/coerce date, logical numeric columns metadata. rename Logical indicating whether rename columns based first row data.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/remove_label_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove two initial rows created in Qualtrics data — remove_label_rows","text":"object type x excludes Qualtrics label rows date, logical, numeric metadata columns converted correct data class.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/remove_label_rows.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove two initial rows created in Qualtrics data — remove_label_rows","text":"function (1) checks data set uses Qualtrics column names, (2) checks label rows already used column names, (3) removes label rows present, (4) converts date, logical, numeric metadata columns proper data type. Datasets imported using qualtRics::fetch_survey() need function. convert argument converts StartDate, EndDate, RecordedDate, Progress, Finished, Duration (seconds), LocationLatitude, LocationLongitude columns. convert data columns, see dplyr::mutate().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/remove_label_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove two initial rows created in Qualtrics data — remove_label_rows","text":"","code":"# Remove label rows data(qualtrics_raw) df <- remove_label_rows(qualtrics_raw)"},{"path":"https://docs.ropensci.org/excluder/reference/rename_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename columns to match standard Qualtrics names — rename_columns","title":"Rename columns to match standard Qualtrics names — rename_columns","text":"rename_columns() function renames metadata columns match standard Qualtrics names.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/rename_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename columns to match standard Qualtrics names — rename_columns","text":"","code":"rename_columns(x, alert = TRUE)"},{"path":"https://docs.ropensci.org/excluder/reference/rename_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename columns to match standard Qualtrics names — rename_columns","text":"x Data frame (preferably imported Qualtrics using {qualtRics}). alert Logical indicating whether alert user fact columns match secondary labels therefore renamed.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/rename_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename columns to match standard Qualtrics names — rename_columns","text":"object type x column names match standard Qualtrics names.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/rename_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename columns to match standard Qualtrics names — rename_columns","text":"importing Qualtrics data using qualtRics::fetch_survey(). labels entered Qualtrics questions saved 'subtitles' column names. Using sjlabelled::get_label() can make secondary labels primary column names. However, results different set names metadata columns used mark_(), check_(), exclude_() functions. function renames columns match standard Qualtrics names.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/rename_columns.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename columns to match standard Qualtrics names — rename_columns","text":"","code":"# Rename columns data(qualtrics_fetch) qualtrics_renamed <- qualtrics_fetch %>%   rename_columns() names(qualtrics_fetch) #>  [1] \"StartDate\"             \"EndDate\"               \"Status\"                #>  [4] \"IPAddress\"             \"Progress\"              \"Duration (in seconds)\" #>  [7] \"Finished\"              \"RecordedDate\"          \"ResponseId\"            #> [10] \"LocationLatitude\"      \"LocationLongitude\"     \"UserLanguage\"          #> [13] \"Q1_Browser\"            \"Q1_Version\"            \"Q1_Operating System\"   #> [16] \"Q1_Resolution\"         \"Q2\"                    names(qualtrics_renamed) #>  [1] \"StartDate\"             \"EndDate\"               \"Status\"                #>  [4] \"IPAddress\"             \"Progress\"              \"Duration (in seconds)\" #>  [7] \"Finished\"              \"RecordedDate\"          \"ResponseId\"            #> [10] \"LocationLatitude\"      \"LocationLongitude\"     \"UserLanguage\"          #> [13] \"Browser\"               \"Version\"               \"Operating System\"      #> [16] \"Resolution\"            \"Q2\"                     # Alerts when columns cannot be renamed data(qualtrics_numeric) rename_columns(qualtrics_numeric) #> ! The columns are already named correctly.  # Turn off alert rename_columns(qualtrics_numeric, alert = FALSE)"},{"path":"https://docs.ropensci.org/excluder/reference/unite_exclusions.html","id":null,"dir":"Reference","previous_headings":"","what":"Unite multiple exclusion columns into single column — unite_exclusions","title":"Unite multiple exclusion columns into single column — unite_exclusions","text":"mark_*() functions appends new column data. unite_exclusions() function unites columns single column can used filter exclusions downstream. Rows multiple exclusions concatenated commas.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/unite_exclusions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unite multiple exclusion columns into single column — unite_exclusions","text":"","code":"unite_exclusions(   x,   exclusion_types = c(\"duplicates\", \"duration\", \"ip\", \"location\", \"preview\", \"progress\",     \"resolution\"),   separator = \",\",   remove = TRUE )"},{"path":"https://docs.ropensci.org/excluder/reference/unite_exclusions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unite multiple exclusion columns into single column — unite_exclusions","text":"x Data frame tibble (preferably exported Qualtrics). exclusion_types Vector types exclusions unite. separator Character string specifying character use separate multiple exclusion types remove Logical specifying whether remove united columns (default = TRUE) leave data frame (FALSE)","code":""},{"path":"https://docs.ropensci.org/excluder/reference/unite_exclusions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unite multiple exclusion columns into single column — unite_exclusions","text":"object type x includes rows single exclusion column replacing specified exclusion_* columns.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/unite_exclusions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unite multiple exclusion columns into single column — unite_exclusions","text":"","code":"# Unite all exclusion types df <- qualtrics_text %>%   mark_duplicates() %>%   mark_duration(min_duration = 100) %>%   mark_ip() %>%   mark_location() %>%   mark_preview() %>%   mark_progress() %>%   mark_resolution() #> ℹ 2 NAs were found in IP addresses. #> ℹ 7 out of 7 rows had duplicate IP addresses. #> ℹ 1 NA was found in location. #> ℹ 10 out of 10 rows had duplicate locations. #> ℹ 4 out of 100 rows took less time than 100. #> ℹ 2 out of 100 rows had NA values for IP addresses (check for preview data with 'check_preview()'). #> ℹ 4 out of 100 rows had IP address outside of US. #> ℹ 1 out of 100 rows had no information on location. #> ℹ 5 out of 100 rows were located outside of the US. #> ℹ 2 rows were collected as previews. It is highly recommended to exclude these rows before further processing. #> ℹ 6 out of 100 rows did not complete the study. #> ℹ 3 out of 100 rows had screen resolutions less than 0 or height less than 0. df2 <- df %>%   unite_exclusions()  # Unite subset of exclusion types df2 <- df %>%   unite_exclusions(exclusion_types = c(\"duplicates\", \"duration\", \"ip\"))"},{"path":"https://docs.ropensci.org/excluder/reference/use_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Use Qualtrics labels as column names — use_labels","title":"Use Qualtrics labels as column names — use_labels","text":"use_labels() function renames columns using labels generated Qualtrics.  Data must imported using qualtRics::fetch_survey().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/use_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Use Qualtrics labels as column names — use_labels","text":"","code":"use_labels(x)"},{"path":"https://docs.ropensci.org/excluder/reference/use_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Use Qualtrics labels as column names — use_labels","text":"x Data frame imported using qualtRics::fetch_survey().","code":""},{"path":"https://docs.ropensci.org/excluder/reference/use_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Use Qualtrics labels as column names — use_labels","text":"object type x column names using labels generated Qualtrics.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/reference/use_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Use Qualtrics labels as column names — use_labels","text":"","code":"# Rename columns data(qualtrics_fetch) qualtrics_renamed <- qualtrics_fetch %>%   use_labels() names(qualtrics_fetch) #>  [1] \"StartDate\"             \"EndDate\"               \"Status\"                #>  [4] \"IPAddress\"             \"Progress\"              \"Duration (in seconds)\" #>  [7] \"Finished\"              \"RecordedDate\"          \"ResponseId\"            #> [10] \"LocationLatitude\"      \"LocationLongitude\"     \"UserLanguage\"          #> [13] \"Q1_Browser\"            \"Q1_Version\"            \"Q1_Operating System\"   #> [16] \"Q1_Resolution\"         \"Q2\"                    names(qualtrics_renamed) #>  [1] \"Start Date\"            \"End Date\"              \"Response Type\"         #>  [4] \"IP Address\"            \"Progress\"              \"Duration (in seconds)\" #>  [7] \"Finished\"              \"Recorded Date\"         \"Response ID\"           #> [10] \"Location Latitude\"     \"Location Longitude\"    \"User Language\"         #> [13] \"Browser\"               \"Version\"               \"Operating System\"      #> [16] \"Resolution\"            \"like\""},{"path":"https://docs.ropensci.org/excluder/reference/validate_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Check number, names, and type of columns — validate_columns","title":"Check number, names, and type of columns — validate_columns","text":"Determines whether correct number names columns specified arguments functions. function exported.","code":""},{"path":"https://docs.ropensci.org/excluder/reference/validate_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check number, names, and type of columns — validate_columns","text":"","code":"validate_columns(x, column)"},{"path":"https://docs.ropensci.org/excluder/reference/validate_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check number, names, and type of columns — validate_columns","text":"x Data set. column Name column argument check.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-051-2024-01-13","dir":"Changelog","previous_headings":"","what":"excluder 0.5.1 (2024-01-13)","title":"excluder 0.5.1 (2024-01-13)","text":"CRAN release: 2024-01-13","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"new-features-0-5-1","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"excluder 0.5.1 (2024-01-13)","text":"Added new qualtrics_fetch2 dataset includes labels column names.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"package-development-0-5-1","dir":"Changelog","previous_headings":"","what":"PACKAGE DEVELOPMENT","title":"excluder 0.5.1 (2024-01-13)","text":"{tidyselect} package deprecated using .data pronoun tidy selections. .data longer used select() selection functions. used usethis::use_tidy_description() tidy DESCRIPTION file.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"bug-fixes-0-5-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"excluder 0.5.1 (2024-01-13)","text":"Fixed bug now reassign column names rename = TRUE.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"documentation-updates-0-5-1","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION UPDATES","title":"excluder 0.5.1 (2024-01-13)","text":"switched {devtools} {remotes} version install_github() README reduce dependencies. {iptools} package removed CRAN, links {iptools} functions now refer GitHub site.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-050-2023-02-13","dir":"Changelog","previous_headings":"","what":"excluder 0.5.0 (2023-02-13)","title":"excluder 0.5.0 (2023-02-13)","text":"CRAN release: 2023-02-13","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"package-development-0-5-0","dir":"Changelog","previous_headings":"","what":"PACKAGE DEVELOPMENT","title":"excluder 0.5.0 (2023-02-13)","text":"{iptools} package replaced {ipaddress} package.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"documentation-updates-0-5-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION UPDATES","title":"excluder 0.5.0 (2023-02-13)","text":"Getting started vignette renamed excluder. data sets added References page.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-040-2022-06-22","dir":"Changelog","previous_headings":"","what":"excluder 0.4.0 (2022-06-22)","title":"excluder 0.4.0 (2022-06-22)","text":"CRAN release: 2022-06-22","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"excluder 0.4.0 (2022-06-22)","text":"use_labels() function extracts Qualtrics question labels included importing qualtRics::fetch_survey() renames column names labels. qualtrics_fetch data set offers example data set imported using qualtRics::fetch_survey() function. rename_columns() function renames columns match standard Qualtrics column names. primarily utility function mark_*() functions may useful users circumstances.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"minor-improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"excluder 0.4.0 (2022-06-22)","text":"excluding based screen resolution, previously provide minimum width height. works fine screens orientation, screens differ orientation, isn’t sufficient. Now overall minimum argument res_min apply width height. , now can test least one dimensions resolution greater res_min. (#9)","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"documentation-updates-0-4-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION UPDATES","title":"excluder 0.4.0 (2022-06-22)","text":"use several exclusion criteria, must collect non-anonymized data /computer metadata. documentation now points Qualtrics documentation non-anonymized data computer metadata.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"package-development-0-4-0","dir":"Changelog","previous_headings":"","what":"PACKAGE DEVELOPMENT","title":"excluder 0.4.0 (2022-06-22)","text":"package now logo! number CRAN downloads now indicated badge. Tests helper functions improved.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-033-2021-12-03","dir":"Changelog","previous_headings":"","what":"excluder 0.3.3 (2021-12-03)","title":"excluder 0.3.3 (2021-12-03)","text":"CRAN release: 2021-12-03","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"bug-fixes-0-3-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"excluder 0.3.3 (2021-12-03)","text":"Updating dplyr 1.0.8 caught problem using across() inside .na(). Instead, now uses if_all() .na() argument. Thanks @romainfrancois pull request #7. remove_label_rows() now properly converts numeric data Status Finished columns.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-032-2021-11-10","dir":"Changelog","previous_headings":"","what":"excluder 0.3.2 (2021-11-10)","title":"excluder 0.3.2 (2021-11-10)","text":"CRAN release: 2021-11-18","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"minor-improvements-0-3-2","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"excluder 0.3.2 (2021-11-10)","text":"remove_label_rows() function can now rename columns match default column names used verb function arguments. mark_ip_() function now checks (1) internet connectivity, (2) whether IP address data can downloaded https://www.iwik.org/ipcountry/, (3) country code valid. function fails gracefully met.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"documentation-updates-0-3-2","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION UPDATES","title":"excluder 0.3.2 (2021-11-10)","text":"README vignette clarified multiple check_*() functions piped. *_ip() function documentation clarified internet connectivity requirements.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"package-development-0-3-2","dir":"Changelog","previous_headings":"","what":"PACKAGE DEVELOPMENT","title":"excluder 0.3.2 (2021-11-10)","text":"paper excluder package now published Journal Open Source Software. JOSS badge added README. Tests *_ip() functions now skipped CRAN avoid timeout delays. Clean package preparation submission CRAN.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"minor-improvements-0-3-1","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"excluder 0.3.1 (2021-11-04)","text":"messages now use cli generate messages clearly outputs numbers text. functions now print output data frames default can turned print = FALSE. *_ip() functions now include include_na argument (like *_duplicates() *_location() functions), users can decide whether include NA values data meet exclusion criteria. now five new utility functions help simplify primary verb functions. keep_exclusion_column() allows users keep exclusion column output check_*() functions moves column first column output. mark_rows() bulk work creating new columns exclusion criteria marking rows meet criteria. print_data() controls whether output printed console. print_exclusion() generates message many rows excluded exclude_*() functions. validate_columns() validates number, names, type columns inputted arguments verb functions. NEWS.md file now based rOpenSci template.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"bug-fixes-0-3-1","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"excluder 0.3.1 (2021-11-04)","text":"unite_exclusions() function now properly removes multiple separators multiple exclusion criteria used. mark_duplicates() function now properly counts includes correct number NAs IP addresses locations properly prints data.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"package-development-0-3-1","dir":"Changelog","previous_headings":"","what":"PACKAGE DEVELOPMENT","title":"excluder 0.3.1 (2021-11-04)","text":"excluder package now approved transferred rOpenSci. package peer reviewed Joseph O’Brien (@jmobrien) Julia Silge (@juliasilge), now listed reviewers DESCRIPTION file.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"new-features-0-3-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"excluder 0.3.0 (2021-10-13)","text":"mark_durations() function now marks fast slow durations separately. primary functionality package moved check_*() functions mark_*() functions. Thus, check_*() exclude_*() now first call mark_*() mark rows exclusion criteria, filter excluded rows. documentation check_*() exclude_*() now inherit arguments mark_*(). change updated README Getting Started vignette.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"minor-improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"excluder 0.3.0 (2021-10-13)","text":"exclude__*() functions now print = FALSE quiet = TRUE set default argument values. Calls rbind() replaced bind_cols() dplyr::pull() replaced [[]]. Calls all_of() any_of() now refer tidyselect rather dplyr. () statements now robust using identical() rather == && instead &. stringr package now imported instead suggested. mark, check, exclude functions particular exclusion type combined single R file. now exclusion type R file. Similarly, data file scripts combined single file.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"excluder 0.3.0 (2021-10-13)","text":"*_ip() functions documentation updated fix bug/typo clarify mark, check, exclude rows IP addresses outside specified country.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"deprecated-and-defunct-0-3-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"excluder 0.3.0 (2021-10-13)","text":"collapse_exclusions() renamed unite_exclusions() match tidyverse terminology. collapse_exclusions() now deprecated removed future version, use unite_exlusions(). unite_exlusions() also switched using NA “” rows exclusions. Combined columns now longer leftover separators.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"documentation-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"DOCUMENTATION FIXES","title":"excluder 0.3.0 (2021-10-13)","text":"Package links replaced external URLs.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-022","dir":"Changelog","previous_headings":"","what":"excluder 0.2.2","title":"excluder 0.2.2","text":"Lifecycle updated Stable, repo status Active added. now Getting Started Excluding Data vignette gives overview package usage. Users can now specify separator used exclusion types collapse_exclusions() function. can also opt remove excluded columns. bug collapse_exclusions() function fixed, now subset exclusion columns can collapsed single column. bug remove_label_rows() function fixed, now Finished column converted logical vector. codemeta.json file created. URLs replaced tweaked address CRAN package check warnings. Functions now organized topic Reference page website.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-021","dir":"Changelog","previous_headings":"","what":"excluder 0.2.1","title":"excluder 0.2.1","text":"argument name data frame switched .data x avoid confusion rlang use .data. Instead using quo() sym() create new names columns used arguments, .data[[var]] now used. dupe_count column removed check_duplicates() output. Tests adjusted account new number columns. check_duplicates() now specifies number NA columns. URLs replaced tweaked address CRAN package check warnings. Links function reference pages added README.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-020","dir":"Changelog","previous_headings":"","what":"excluder 0.2.0","title":"excluder 0.2.0","text":"deidentify() function added, removes IP address, location, computer information columns.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-010","dir":"Changelog","previous_headings":"","what":"excluder 0.1.0","title":"excluder 0.1.0","text":"check_qualtrics argument removed remove_label_rows() functionality make sense. breaks backwards compatibility. remove_label_rows() now filters label rows label rows present outputs invisibly. Tests added qualtrics_raw dataset remove_label_rows() function. Package-level documentation created.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-001","dir":"Changelog","previous_headings":"","what":"excluder 0.0.1","title":"excluder 0.0.1","text":"remove_label_rows() now converts character columns dates multiple date formats, including YYYY-MM-DD HH:MM:SS, YYYY-MM-DD HH:MM, MM:DD:YYYY HH:MM:SS, MM:DD:YYYY HH:MM (#1). Code Conduction Contributor Guide added. Citation Contributor sections added README.","code":""},{"path":"https://docs.ropensci.org/excluder/news/index.html","id":"excluder-0001","dir":"Changelog","previous_headings":"","what":"excluder 0.0.0.1","title":"excluder 0.0.0.1","text":"Initial GitHub release","code":""}]
